architecture_information:
  name: arm

  semantic:
    add3: &add3
      [ op0.val = op1.val + op2.val ]

    ldr: &ldr
      [ op0.val = op1.val ]

  encoding:
    - cond: &cond [ 'c','c','c','c' ]

    - imm_1:   &imm_1   [ 'i' ]
    - imm_2:   &imm_2   [ 'i','i' ]
    - imm_3:   &imm_3   [ 'i','i','i' ]
    - imm_4:   &imm_4   [ 'i','i','i','i' ]
    - imm_4L:  &imm_4L  [ 'i','i','i','i' ]
    - imm_4H:  &imm_4H  [ 'i','i','i','i' ]
    - imm_5:   &imm_5   [ 'i','i','i','i','i' ]
    - imm_6:   &imm_6   [ 'i','i','i','i','i','i' ]
    - imm_7:   &imm_7   [ 'i','i','i','i','i','i','i' ]
    - imm_8:   &imm_8   [ 'i','i','i','i','i','i','i','i' ]
    - imm_10:  &imm_10  [ 'i','i','i','i','i','i','i','i','i','i' ]
    - imm_10L: &imm_10L [ 'i','i','i','i','i','i','i','i','i','i' ]
    - imm_10H: &imm_10H [ 'i','i','i','i','i','i','i','i','i','i' ]
    - imm_11:  &imm_11  [ 'i','i','i','i','i','i','i','i','i','i','i' ]
    - imm_12:  &imm_12  [ 'i','i','i','i','i','i','i','i','i','i','i','i' ]
    - imm_24:  &imm_24  [ 'i','i','i','i','i','i','i','i','i','i','i','i','i','i','i','i','i','i','i','i','i','i','i','i' ]

    - Ra_4: &Ra_4 [ 'a','a','a','a' ]
    - Rd_3: &Rd_3 [ 'd','d','d' ]
    - Rd_4: &Rd_4 [ 'd','d','d','d' ]
    - Rm_3: &Rm_3 [ 'm','m','m' ]
    - Rm_4: &Rm_4 [ 'm','m','m','m' ]
    - Rn_3: &Rn_3 [ 'n','n','n' ]
    - Rn_4: &Rn_4 [ 'n','n','n','n' ]
    - Rs_4: &Rs_4 [ 's','s','s','s' ]
    - Rt_3: &Rt_3 [ 't','t','t' ]
    - Rt_4: &Rt_4 [ 't','t','t','t' ]
    - Va: &Va [ 'a','a','a','a' ]
    - Vd: &Vd [ 'd','d','d','d' ]
    - Vm: &Vm [ 'm','m','m','m' ]
    - Vn: &Vn [ 'n','n','n','n' ]
    - Vs: &Vs [ 's','s','s','s' ]
    - Vt: &Vt [ 't','t','t','t' ]
    - Rt2_4: &Rt2_4 [ 't2','t2','t2','t2' ]
    - RdLo_4: &RdLo_4 [ 'dlo','dlo','dlo','dlo' ]
    - RdHi_4: &RdHi_4 [ 'dhi','dhi','dhi','dhi' ]
    - Rdm_3: &Rdm_3 [ 'dm','dm','dm' ]
    - Rdm_4: &Rdm_4 [ 'dm','dm','dm','dm' ]
    - Rdn_3: &Rdn_3 [ 'dn','dn','dn' ]
    - Rdn_4: &Rdn_4 [ 'dn','dn','dn','dn' ]
    - CRd_4: &CRd_4 [ 'd','d','d','d' ]
    - CRm_4: &CRm_4 [ 'm','m','m','m' ]
    - CRn_4: &CRn_4 [ 'n','n','n','n' ]

    - a: &a [ 'A' ]
    - b: &b [ 'B' ]
    - e: &e [ 'E' ]
    - B: &B [ 'B' ]
    - D: &D [ 'D' ]
    - E: &E [ 'E' ]
    - F: &F [ 'F' ]
    - H: &H [ 'H' ]
    - J: &J [ 'J' ]
    - L: &L [ 'L' ]
    - M: &M [ 'M' ]
    - N: &N [ 'N' ]
    - P: &P [ 'P' ]
    - Q: &Q [ 'Q' ]
    - R: &R [ 'R' ]
    - S: &S [ 'S' ]
    - T: &T [ 'T' ]
    - U: &U [ 'U' ]
    - W: &W [ 'W' ]
    - DN: &DN [ 'DN' ]
    - DM: &DM [ 'DM' ]
    - J1: &J1 [ 'J1' ]
    - J2: &J2 [ 'J2' ]

    - type_2: &type_2 [ 'tp','tp' ]
    - type_4: &type_4 [ 'tp','tp','tp','tp' ]
    - lsb: &lsb [ 'lsb','lsb','lsb','lsb','lsb' ]
    - msb: &msb [ 'msb','msb','msb','msb','msb' ]
    - op_1: &op_1 [ 'op' ]
    - op_2: &op_2 [ 'op','op' ]
    - op2_2: &op2_2 [ 'op','op' ]
    - coproc: &coproc [ 'coproc','coproc','coproc','coproc' ]
    - opc1_2: &opc1_2 [ 'opc1','opc1' ]
    - opc1_3: &opc1_3 [ 'opc1','opc1','opc1' ]
    - opc1_4: &opc1_4 [ 'opc1','opc1','opc1','opc1' ]
    - opc2_2: &opc2_2 [ 'opc2','opc2' ]
    - opc2_3: &opc2_3 [ 'opc2','opc2','opc2' ]
    - option: &option [ 'option','option','option','option' ]
    - firstcond: &firstcond [ 'firstcond','firstcond','firstcond','firstcond' ]
    - mask_2: &mask_2 [ 'mask_4','mask_4' ]
    - mask_4: &mask_4 [ 'mask_4','mask_4','mask_4','mask_4' ]
    - register_list_8: &register_list_8 [ 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r' ]
    - register_list_13: &register_list_13 [ 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r' ]
    - register_list_16: &register_list_16 [ 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r' ]
    - tb: &tb [ 'tb' ]
    - widthm1: &widthm1 [ 'widthm1','widthm1','widthm1','widthm1','widthm1' ]
    - SBZ: &SBZ [ 'sbz','sbz','sbz','sbz' ]
    - sh: &sh [ 'sh' ]
    - sat_imm_4: &sat_imm_4 [ 'i','i','i','i' ]
    - sat_imm_5: &sat_imm_5 [ 'sat_imm_5','sat_imm_5','sat_imm_5','sat_imm_5','sat_imm_5' ]
    - rotate: &rotate [ 'rotate','rotate' ]
    - size: &size [ 'i','i' ]
    - sz: &sz [ 'sz' ]
    - cmode: &cmode [ 'cmode','cmode','cmode','cmode' ]
    - sf: &sf [ 'sf' ]
    - sx: &sx [ 'sx' ]
    - align: &align [ 'align','align' ]
    - index_align: &index_align [ 'index_align','index_align','index_align','index_align' ]
    - len: &len [ 'len','len' ]
    - handler5: &handler5 [ 'h','h','h','h','h' ]
    - handler8: &handler8 [ 'h','h','h','h','h','h','h','h' ]

instruction:

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ADC{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,1,0,1,0,*S,*Rn_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADC{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,0,1,0,1,*S,*Rn_4,*Rd_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADCS <Rdn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,0,1,0,1,*Rm_3,*Rdn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ADC{S}<c>.W <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,1,0,1,0,*S,*Rn_4,(0),*imm_3,*Rd_4,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADC{S}<c> <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,1,0,1,*S,*Rn_4,*Rd_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADC{S}<c> <Rd>, <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,1,0,1,*S,*Rn_4,*Rd_4,*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADDS <Rd>, <Rn>, #<imm3>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,0,0,1,1,1,0,*imm_3,*Rn_3,*Rd_3 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADDS <Rdn>, #<imm8>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 0,0,1,1,0,*Rdn_3,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ADD{S}<c>.W <Rd>, <Rn>, #<const>'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,1,0,0,0,*S,*Rn_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ADDW<c> <Rd>, <Rn>, #<imm12>'
    semantic: []
    mode: T4
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,1,0,0,0,0,0,*Rn_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADD{S}<c> <Rd>, <Rn>, #<const>'
    semantic: *add3
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,0,1,0,0,*S,*Rn_4,*Rd_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADDS <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,0,0,1,1,0,0,*Rm_3,*Rn_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ADD<c> <Rdn>, <Rm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 0,1,0,0,0,1,0,0,*DN,*Rm_4,*Rdn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ADD{S}<c>.W <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,1,0,0,0,*S,*Rn_4,(0),*imm_3,*Rd_4,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADD{S}<c> <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,1,0,0,*S,*Rn_4,*Rd_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADD{S}<c> <Rd>, <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,1,0,0,*S,*Rn_4,*Rd_4,*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADD<c> <Rd>,SP, #<imm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,0,1,*Rd_3,*imm_8 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADD<c> SP,SP, #<imm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,0,1,1,0,0,0,0,0,*imm_7 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ADD{S}<c>.W <Rd>,SP, #<const>'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,1,0,0,0,*S,1,1,0,1,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ADDW<c> <Rd>,SP, #<imm12>'
    semantic: []
    mode: T4
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,1,0,0,0,0,0,1,1,0,1,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADD{S}<c> <Rd>,SP, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,0,1,0,0,*S,1,1,0,1,*Rd_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADD<c> <Rdm>, SP, <Rdm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,1,0,0,*DM,1,1,0,1,*Rdm_3 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADD<c> SP,<Rm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 0,1,0,0,0,1,0,0,1,*Rm_4,1,0,1 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ADD{S}<c>.W <Rd>, SP, <Rm>{,<shift>}'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,1,0,0,0,*S,1,1,0,1,0,*imm_3,*Rd_4,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADD{S}<c> <Rd>, SP, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,1,0,0,*S,1,1,0,1,*Rd_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADR<c> <Rd>, <label>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,0,0,*Rd_3,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SUB <Rd>,PC, #0'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,1,0,1,0,1,0,1,1,1,1,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ADR<c>.W <Rd>, <label>'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,1,0,0,0,0,0,1,1,1,1,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ADR<c> <Rd>, <label>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,0,1,0,0,0,1,1,1,1,*Rd_4,*imm_12 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SUB <Rd>,PC, #0'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ *cond,0,0,1,0,0,1,0,0,1,1,1,1,*Rd_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'AND{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,0,0,0,0,*S,*Rn_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'AND{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,0,0,0,0,*S,*Rn_4,*Rd_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ANDS <Rdn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,0,0,0,0,*Rm_3,*Rdn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'AND{S}<c>.W <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,0,0,0,*S,*Rn_4,(0),*imm_3,*Rd_4,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'AND{S}<c> <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,0,0,0,*S,*Rn_4,*Rd_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'AND{S}<c> <Rd>, <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,0,0,0,*S,*Rn_4,*Rd_4,*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ASRS <Rd>, <Rm>, #<imm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,0,0,1,0,*imm_5,*Rm_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ASR{S}<c>.W <Rd>, <Rm>, #<imm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,0,1,0,*S,1,1,1,1,(0),*imm_3,*Rd_4,*imm_2,1,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ASR{S}<c> <Rd>, <Rm>, #<imm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,1,*S,(0),(0),(0),(0),*Rd_4,*imm_5,1,0,0,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ASRS <Rdn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,0,1,0,0,*Rm_3,*Rdn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ASR{S}<c>.W <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,1,0,*S,*Rn_4,1,1,1,1,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ASR{S}<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,1,*S,(0),(0),(0),(0),*Rd_4,*Rm_4,0,1,0,1,*Rn_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'B<c> <label>'
    semantic: []
    mode: T1
    attribute: [ 'jmp' ]
    encoding: [ 1,1,0,1,*cond,*imm_8 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'B<c> <label>'
    semantic: []
    mode: T2
    attribute: [ 'jmp' ]
    encoding: [ 1,1,1,0,0,*imm_11 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'B<c>.W <label>'
    semantic: []
    mode: T3
    attribute: [ 'jmp' ]
    encoding: [ 1,1,1,1,0,*S,*cond,*imm_6,1,0,*J1,0,*J2,*imm_11 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'B<c>.W <label>'
    semantic: []
    mode: T4
    attribute: ['jmp']
    encoding: [ 1,1,1,1,0,*S,*imm_10,1,0,*J1,1,*J2,*imm_11 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'B<c> <label>'
    semantic: []
    mode: A1
    attribute: [ 'jmp' ]
    encoding: [ *cond,1,0,1,0,*imm_24 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'BFC<c> <Rd>, #<lsb>, #<width>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,(0),1,1,0,1,1,0,1,1,1,1,0,*imm_3,*Rd_4,*imm_2,(0),*msb ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'BFC<c> <Rd>, #<lsb>, #<width>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,1,1,0,*msb,*Rd_4,*lsb,0,0,1,1,1,1,1 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'BFI<c> <Rd>, <Rn>, #<lsb>, #<width>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,(0),1,1,0,1,1,0,*Rn_4,0,*imm_3,*Rd_4,*imm_2,(0),*msb ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'BFI<c> <Rd>, <Rn>, #<lsb>, #<width>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,1,1,0,*msb,*Rd_4,*lsb,0,0,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'BIC{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,0,0,0,1,*S,*Rn_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BIC{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,1,1,0,*S,*Rn_4,*Rd_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BICS <Rdn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,1,1,1,0,*Rm_3,*Rdn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'BIC{S}<c>.W <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,0,0,1,*S,*Rn_4,(0),*imm_3,*Rd_4,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BIC{S}<c> <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,1,0,*S,*Rn_4,*Rd_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BIC{S}<c> <Rd>, <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,1,0,*S,*Rn_4,*Rd_4,*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BKPT #<imm8>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,1,1,1,0,*imm_8 ]

  - processor: ['ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BKPT #<imm16>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,0,1,0,*imm_12,0,1,1,1,*imm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BL<c> <label>'
    semantic: []
    mode: T1
    attribute: [ 'call' ]
    encoding: [ 1,1,1,1,0,*S,*imm_10,1,1,*J1,1,*J2,*imm_11 ]

  - processor: ['ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BLX<c> <label>'
    semantic: []
    mode: T2
    attribute: [ 'call' ]
    encoding: [ 1,1,1,1,0,*S,*imm_10H,1,1,*J1,0,*J2,*imm_10L,0 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BL<c> <label>'
    semantic: []
    mode: A1
    attribute: [ 'call' ]
    encoding: [ *cond,1,0,1,1,*imm_24 ]

  - processor: ['ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BLX <label>'
    semantic: []
    mode: A2
    attribute: [ 'call' ]
    encoding: [ 1,1,1,1,1,0,1,*H,*imm_24 ]

  - processor: ['ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BLX<c> <Rm>'
    semantic: []
    mode: T1
    attribute: [ 'call' ]
    encoding: [ 0,1,0,0,0,1,1,1,1,*Rm_4,(0),(0),(0) ]

  - processor: ['ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BLX<c> <Rm>'
    semantic: []
    mode: A1
    attribute: [ 'call' ]
    encoding: [ *cond,0,0,0,1,0,0,1,0,(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),0,0,1,1,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BX<c> <Rm>'
    semantic: []
    mode: T1
    attribute: [ 'call' ]
    encoding: [ 0,1,0,0,0,1,1,1,0,*Rm_4,(0),(0),(0) ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'BX<c> Rm'
    semantic: []
    mode: A1
    attribute: [ 'call' ]
    encoding: [ *cond,0,0,0,1,0,0,1,0,(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'BXJ<c> <Rm>'
    semantic: []
    mode: T1
    attribute: [ 'call', 'change_to_jazelle' ]
    encoding: [ 1,1,1,1,0,0,1,1,1,1,0,0,*Rm_4,1,0,(0),0,(1),(1),(1),(1),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv5TEJ', 'ARMv6*', 'ARMv7']
    format: 'BXJ<c> <Rm>'
    semantic: []
    mode: A1
    attribute: [ 'call' ]
    encoding: [ *cond,0,0,0,1,0,0,1,0,(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),0,0,1,0,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'CB{N}Z <Rn>, <label>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,*op_1,0,*imm_1,1,*imm_5,*Rn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'CDP<c> <coproc>, <opc1>, <CRd>, <CRn>, <CRm>, <opc2>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,*opc1_4,*CRn_4,*CRd_4,*coproc,*opc2_3,0,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'CDP<c> <coproc>, <opc1>, <CRd>, <CRn>, <CRm>, <opc2>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,1,0,*opc1_4,*CRn_4,*CRd_4,*coproc,*opc2_3,0,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'CDP2<c> <coproc>, <opc1>, <CRd>, <CRn>, <CRm>, <opc2>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,0,*opc1_4,*CRn_4,*CRd_4,*coproc,*opc2_3,0,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'CDP2<c> <coproc>, <opc1>, <CRd>, <CRn>, <CRm>, <opc2>'
    semantic: []
    mode: A2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,0,*opc1_4,*CRn_4,*CRd_4,*coproc,*opc2_3,0,*CRm_4 ]

  - processor: ['ARMv7']
    format: 'CLREX<c>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,0,1,1,(1),(1),(1),(1),1,0,(0),0,(1),(1),(1),(1),0,0,1,0,(1),(1),(1),(1) ]

  - processor: ['ARMv6K', 'ARMv7']
    format: 'CLREX'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,1,0,1,0,1,1,1,(1),(1),(1),(1),(1),(1),(1),(1),(0),(0),(0),(0),0,0,0,1,(1),(1),(1),(1) ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'CLZ<c> <Rd>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,1,1,*Rm_4,1,1,1,1,*Rd_4,1,0,0,0,*Rm_4 ]

  - processor: ['ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'CLZ<c> <Rd>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,1,1,0,(1),(1),(1),(1),*Rd_4,(1),(1),(1),(1),0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'CMN<c> <Rn>, #<const>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,1,0,0,0,1,*Rn_4,0,*imm_3,1,1,1,1,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'CMN<c> <Rn>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,0,1,1,1,*Rn_4,(0),(0),(0),(0),*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'CMN<c> <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,1,0,1,1,*Rm_3,*Rn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'CMN<c>.W <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,1,0,0,0,1,*Rn_4,(0),*imm_3,1,1,1,1,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'CMN<c> <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,1,1,1,*Rn_4,(0),(0),(0),(0),*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'CMN<c> <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,1,1,1,*Rn_4,(0),(0),(0),(0),*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'CMP<c> <Rn>, #<imm8>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,0,1,0,1,*Rn_3,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'CMP<c>.W <Rn>, #<const>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,1,1,0,1,1,*Rn_4,0,*imm_3,1,1,1,1,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'CMP<c> <Rn>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,0,1,0,1,*Rn_4,(0),(0),(0),(0),*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'CMP<c> <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,1,0,1,0,*Rm_3,*Rn_3 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'CMP<c> <Rn>, <Rm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 0,1,0,0,0,1,0,1,*N,*Rm_4,*Rn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'CMP<c>.W <Rn>, <Rm> {,<shift>}'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,1,1,0,1,1,*Rn_4,(0),*imm_3,1,1,1,1,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'CMP<c> <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,1,0,1,*Rn_4,(0),(0),(0),(0),*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'CMP<c> <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,1,0,1,*Rn_4,(0),(0),(0),(0),*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv7', 'ARMv6T2)']
    format: 'DBG<c> #<option>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,0,1,0,(1),(1),(1),(1),1,0,(0),0,(0),0,0,0,1,1,1,1,*option ]

  - processor: ['ARMv7', 'ARMv6Kand', 'ARMv6T2)']
    format: 'DBG<c> #<option>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,0,0,1,0,0,0,0,0,(1),(1),(1),(1),(0),(0),(0),(0),1,1,1,1,*option ]

  - processor: ['ARMv7']
    format: 'DMB<c> #<option>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,0,1,1,(1),(1),(1),(1),1,0,(0),0,(1),(1),(1),(1),0,1,0,1,*option ]

  - processor: ['ARMv7']
    format: 'DMB #<option>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,1,0,1,0,1,1,1,(1),(1),(1),(1),(1),(1),(1),(1),(0),(0),(0),(0),0,1,0,1,*option ]

  - processor: ['ARMv7']
    format: 'DSB<c> #<option>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,0,1,1,(1),(1),(1),(1),1,0,(0),0,(1),(1),(1),(1),0,1,0,0,*option ]

  - processor: ['ARMv7']
    format: 'DSB #<option>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,1,0,1,0,1,1,1,(1),(1),(1),(1),(1),(1),(1),(1),(0),(0),(0),(0),0,1,0,0,*option ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'EOR{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,0,1,0,0,*S,*Rn_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'EOR{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,0,0,0,1,*S,*Rn_4,*Rd_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'EORS <Rdn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,0,0,0,1,*Rm_3,*Rdn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'EOR{S}<c>.W <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,1,0,0,*S,*Rn_4,(0),*imm_3,*Rd_4,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'EOR{S}<c> <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,0,0,1,*S,*Rn_4,*Rd_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'EOR{S}<c> <Rd>, <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,0,0,1,*S,*Rn_4,*Rd_4,*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv7']
    format: 'ISB<c> #<option>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,0,1,1,(1),(1),(1),(1),1,0,(0),0,(1),(1),(1),(1),0,1,1,0,*option ]

  - processor: ['ARMv7']
    format: 'ISB #<option>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,1,0,1,0,1,1,1,(1),(1),(1),(1),(1),(1),(1),(1),(0),(0),(0),(0),0,1,1,0,*option ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'IT{x{y{z}}} <firstcond>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,1,1,1,1,*firstcond,*mask_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDC{L}<c> <coproc>, <CRd>, [<Rn>, #+/-<imm>]{!}'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,*P,*U,*D,*W,1,*Rn_4,*CRd_4,*coproc,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDC{L}<c> <coproc>, <CRd>, [<Rn>],<option>'
    semantic: []
    mode: A1
    attribute: ['support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,0,*P,*U,*D,*W,1,*Rn_4,*CRd_4,*coproc,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDC2{L}<c> <coproc>, <CRd>, [<Rn>, #+/-<imm>]{!}'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,0,*P,*U,*D,*W,1,*Rn_4,*CRd_4,*coproc,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDC2{L}<c> <coproc>, <CRd>, [<Rn>],<option>'
    semantic: []
    mode: A2
    attribute: ['support_it_block', 'support_it_block']
    encoding: [ 1,1,1,1,1,1,0,*P,*U,*D,*W,1,*Rn_4,*CRd_4,*coproc,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDC{L}<c> <coproc>, <CRd>, <label>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,*P,*U,*D,*W,1,1,1,1,1,*CRd_4,*coproc,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDC{L}<c> <coproc>, <CRd>, [PC],<option>'
    semantic: []
    mode: A1
    attribute: ['support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,0,*P,*U,*D,*W,1,1,1,1,1,*CRd_4,*coproc,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDC2{L}<c> <coproc>, <CRd>, <label>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,0,*P,*U,*D,*W,1,1,1,1,1,*CRd_4,*coproc,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDC2{L}<c> <coproc>, <CRd>, [PC],<option>'
    semantic: []
    mode: A2
    attribute: ['support_it_block', 'support_it_block']
    encoding: [ 1,1,1,1,1,1,0,*P,*U,*D,*W,1,1,1,1,1,*CRd_4,*coproc,*imm_8 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDM<c> <Rn>, <registers>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,0,0,1,*Rn_3,*register_list_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDM<c>.W <Rn>{!},<registers>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,0,1,0,*W,1,*Rn_4,*P,*M,(0),*register_list_13 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDM<c> <Rn>{!},<registers>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,0,0,0,1,0,*W,1,*Rn_4,*register_list_16 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDMDA<c> <Rn>{!},<registers>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,0,0,0,0,0,*W,1,*Rn_4,*register_list_16 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDMDB<c> <Rn>{!},<registers>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,1,0,0,*W,1,*Rn_4,*P,*M,(0),*register_list_13 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDMDB<c> <Rn>{!},<registers>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,0,0,1,0,0,*W,1,*Rn_4,*register_list_16 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDMIB<c> <Rn>{!},<registers>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,0,0,1,1,0,*W,1,*Rn_4,*register_list_16 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDR<c> <Rt>, [<Rn>{,#<imm>}]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,1,0,1,*imm_5,*Rn_3,*Rt_3 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDR<c> <Rt>, [SP{,#<imm>}]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,0,0,1,1,*Rt_3,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDR<c>.W <Rt>, [<Rn>{,#<imm12>}]'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,1,1,0,1,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDR<c> <Rt>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: T4
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,1,0,1,*Rn_4,*Rt_4,1,*P,*U,*W,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDR<c> <Rt>, [<Rn>,#+/-<imm12>]!'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,0,*P,*U,0,*W,1,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDR<c> <Rt>, <label>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,1,*Rt_3,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDR<c>.W <Rt>, [PC,#-0]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,*U,1,0,1,1,1,1,1,*Rt_4,*imm_12 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDR<c> <Rt>, [PC,#-0]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,0,(1),*U,0,(0),1,1,1,1,1,*Rt_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDR<c> <Rt>, [<Rn>, <Rm>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,1,1,0,0,*Rm_3,*Rn_3,*Rt_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDR<c>.W <Rt>, [<Rn>, <Rm>{,LSL #<imm2>}]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,1,0,1,*Rn_4,*Rt_4,0,0,0,0,0,0,*imm_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDR<c> <Rt>, [<Rn>],+/-<Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,*P,*U,0,*W,1,*Rn_4,*Rt_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRB<c> <Rt>, [<Rn>{,#<imm5>}]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,1,1,1,*imm_5,*Rn_3,*Rt_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRB<c>.W <Rt>, [<Rn>{,#<imm12>}]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,1,0,0,1,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRB<c> <Rt>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,0,1,*Rn_4,*Rt_4,1,*P,*U,*W,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRB<c> <Rt>, [<Rn>,#+/-<imm12>]!'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,0,*P,*U,1,*W,1,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRB<c> <Rt>, [PC,#-0]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,*U,0,0,1,1,1,1,1,*Rt_4,*imm_12 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRB<c> <Rt>, [PC,#-0]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,0,(1),*U,1,(0),1,1,1,1,1,*Rt_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRB<c> <Rt>, [<Rn>, <Rm>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,1,1,1,0,*Rm_3,*Rn_3,*Rt_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRB<c>.W <Rt>, [<Rn>, <Rm>{,LSL #<imm2>}]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,0,1,*Rn_4,*Rt_4,0,0,0,0,0,0,*imm_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRB<c> <Rt>, [<Rn>],+/-<Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,*P,*U,1,*W,1,*Rn_4,*Rt_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRBT<c> <Rt>, [<Rn>, #<imm8>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,0,1,*Rn_4,*Rt_4,1,1,1,0,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRBT<c> <Rt>, [<Rn>], #+/-<imm12>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,0,0,*U,1,1,1,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRBT<c> <Rt>, [<Rn>],+/-<Rm>{,<shift>}'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ *cond,0,1,1,0,*U,1,1,1,*Rn_4,*Rt_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRD<c> <Rt>, <Rt2>, [<Rn>, #+/-<imm>]!'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,*P,*U,1,*W,1,*Rn_4,*Rt_4,*Rt2_4,*imm_8 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'LDRD<c> <Rt>, <Rt2>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,*P,*U,1,*W,0,*Rn_4,*Rt_4,*imm_4H,1,1,0,1,*imm_4L ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRD<c> <Rt>, <Rt2>, [PC,#-0]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,*P,*U,1,(0),1,1,1,1,1,*Rt_4,*Rt2_4,*imm_8 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'LDRD<c> <Rt>, <Rt2>, [PC,#-0]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,(1),*U,1,(0),0,1,1,1,1,*Rt_4,*imm_4H,1,1,0,1,*imm_4L ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'LDRD<c> <Rt>, <Rt2>, [<Rn>],+/-<Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,*P,*U,0,*W,0,*Rn_4,*Rt_4,(0),(0),(0),(0),1,1,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDREX<c> <Rt>, [<Rn>{,#<imm>}]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,0,0,1,0,1,*Rn_4,*Rt_4,(1),(1),(1),(1),*imm_8 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'LDREX<c> <Rt>, [<Rn>]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,0,1,*Rn_4,*Rt_4,(1),(1),(1),(1),1,0,0,1,(1),(1),(1),(1) ]

  - processor: ['ARMv7']
    format: 'LDREXB<c> <Rt>, [<Rn>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,0,1,1,0,1,*Rn_4,*Rt_4,(1),(1),(1),(1),0,1,0,0,(1),(1),(1),(1) ]

  - processor: ['ARMv6K', 'ARMv7']
    format: 'LDREXB<c> <Rt>, [<Rn>]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,1,0,1,*Rn_4,*Rt_4,(1),(1),(1),(1),1,0,0,1,(1),(1),(1),(1) ]

  - processor: ['ARMv7']
    format: 'LDREXD<c> <Rt>, <Rt2>, [<Rn>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,0,1,1,0,1,*Rn_4,*Rt_4,*Rt2_4,0,1,1,1,(1),(1),(1),(1) ]

  - processor: ['ARMv6K', 'ARMv7']
    format: 'LDREXD<c> <Rt>, <Rt2>, [<Rn>]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,1,1,*Rn_4,*Rt_4,(1),(1),(1),(1),1,0,0,1,(1),(1),(1),(1) ]

  - processor: ['ARMv7']
    format: 'LDREXH<c> <Rt>, [<Rn>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,0,1,1,0,1,*Rn_4,*Rt_4,(1),(1),(1),(1),0,1,0,1,(1),(1),(1),(1) ]

  - processor: ['ARMv6K', 'ARMv7']
    format: 'LDREXH<c> <Rt>, [<Rn>]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,1,1,1,*Rn_4,*Rt_4,(1),(1),(1),(1),1,0,0,1,(1),(1),(1),(1) ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRH<c> <Rt>, [<Rn>{,#<imm>}]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,0,0,1,*imm_5,*Rn_3,*Rt_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRH<c>.W <Rt>, [<Rn>{,#<imm12>}]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,1,0,1,1,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRH<c> <Rt>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,1,1,*Rn_4,*Rt_4,1,*P,*U,*W,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRH<c> <Rt>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,*P,*U,1,*W,1,*Rn_4,*Rt_4,*imm_4H,1,0,1,1,*imm_4L ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRH<c> <Rt>, [PC,#-0]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,*U,0,1,1,1,1,1,1,*Rt_4,*imm_12 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRH<c> <Rt>, [PC,#-0]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,(1),*U,1,(0),1,1,1,1,1,*Rt_4,*imm_4H,1,0,1,1,*imm_4L ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRH<c> <Rt>, [<Rn>, <Rm>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,1,1,0,1,*Rm_3,*Rn_3,*Rt_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRH<c>.W <Rt>, [<Rn>, <Rm>{,LSL #<imm2>}]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,1,1,*Rn_4,*Rt_4,0,0,0,0,0,0,*imm_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRH<c> <Rt>, [<Rn>],+/-<Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,*P,*U,0,*W,1,*Rn_4,*Rt_4,(0),(0),(0),(0),1,0,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRHT<c> <Rt>, [<Rn>, #<imm8>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,1,1,*Rn_4,*Rt_4,1,1,1,0,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRHT<c> <Rt>, [<Rn>] {,#+/-<imm8>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,*U,1,1,1,*Rn_4,*Rt_4,*imm_4H,1,0,1,1,*imm_4L ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRHT<c> <Rt>, [<Rn>], +/-<Rm>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ *cond,0,0,0,0,*U,0,1,1,*Rn_4,*Rt_4,(0),(0),(0),(0),1,0,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSB<c> <Rt>, [<Rn>, #<imm12>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,1,0,0,1,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSB<c> <Rt>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,0,0,0,1,*Rn_4,*Rt_4,1,*P,*U,*W,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRSB<c> <Rt>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,*P,*U,1,*W,1,*Rn_4,*Rt_4,*imm_4H,1,1,0,1,*imm_4L ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSB<c> <Rt>, [PC,#-0]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,*U,0,0,1,1,1,1,1,*Rt_4,*imm_12 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRSB<c> <Rt>, [PC,#-0]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,(1),*U,1,(0),1,1,1,1,1,*Rt_4,*imm_4H,1,1,0,1,*imm_4L ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRSB<c> <Rt>, [<Rn>, <Rm>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,1,0,1,1,*Rm_3,*Rn_3,*Rt_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSB<c>.W <Rt>, [<Rn>, <Rm>{,LSL #<imm2>}]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,0,0,0,1,*Rn_4,*Rt_4,0,0,0,0,0,0,*imm_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRSB<c> <Rt>, [<Rn>],+/-<Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,*P,*U,0,*W,1,*Rn_4,*Rt_4,(0),(0),(0),(0),1,1,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSBT<c> <Rt>, [<Rn>, #<imm8>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,0,0,0,1,*Rn_4,*Rt_4,1,1,1,0,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSBT<c> <Rt>, [<Rn>] {,#+/-<imm8>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,*U,1,1,1,*Rn_4,*Rt_4,*imm_4H,1,1,0,1,*imm_4L ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSBT<c> <Rt>, [<Rn>], +/-<Rm>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ *cond,0,0,0,0,*U,0,1,1,*Rn_4,*Rt_4,(0),(0),(0),(0),1,1,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSH<c> <Rt>, [<Rn>, #<imm12>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,1,0,1,1,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSH<c> <Rt>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,0,0,1,1,*Rn_4,*Rt_4,1,*P,*U,*W,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRSH<c> <Rt>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,*P,*U,1,*W,1,*Rn_4,*Rt_4,*imm_4H,1,1,1,1,*imm_4L ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSH<c> <Rt>, [PC,#-0]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,*U,0,1,1,1,1,1,1,*Rt_4,*imm_12 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRSH<c> <Rt>, [PC,#-0]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,(1),*U,1,(0),1,1,1,1,1,*Rt_4,*imm_4H,1,1,1,1,*imm_4L ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRSH<c> <Rt>, [<Rn>, <Rm>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,1,1,1,1,*Rm_3,*Rn_3,*Rt_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSH<c>.W <Rt>, [<Rn>, <Rm>{,LSL #<imm2>}]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,0,0,1,1,*Rn_4,*Rt_4,0,0,0,0,0,0,*imm_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRSH<c> <Rt>, [<Rn>],+/-<Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,*P,*U,0,*W,1,*Rn_4,*Rt_4,(0),(0),(0),(0),1,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSHT<c> <Rt>, [<Rn>, #<imm8>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,0,0,1,1,*Rn_4,*Rt_4,1,1,1,0,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSHT<c> <Rt>, [<Rn>] {,#+/-<imm8>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,*U,1,1,1,*Rn_4,*Rt_4,*imm_4H,1,1,1,1,*imm_4L ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRSHT<c> <Rt>, [<Rn>], +/-<Rm>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ *cond,0,0,0,0,*U,0,1,1,*Rn_4,*Rt_4,(0),(0),(0),(0),1,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LDRT<c> <Rt>, [<Rn>, #<imm8>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,1,0,1,*Rn_4,*Rt_4,1,1,1,0,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRT<c> <Rt>, [<Rn>] {,#+/-<imm12>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,0,0,*U,0,1,1,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LDRT<c> <Rt>, [<Rn>],+/-<Rm>{,<shift>}'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ *cond,0,1,1,0,*U,0,1,1,*Rn_4,*Rt_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LSLS <Rd>, <Rm>, #<imm5>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,0,0,0,0,*imm_5,*Rm_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LSL{S}<c>.W <Rd>, <Rm>, #<imm5>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,0,1,0,*S,1,1,1,1,(0),*imm_3,*Rd_4,*imm_2,0,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LSL{S}<c> <Rd>, <Rm>, #<imm5>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,1,*S,(0),(0),(0),(0),*Rd_4,*imm_5,0,0,0,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LSLS <Rdn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,0,0,1,0,*Rm_3,*Rdn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LSL{S}<c>.W <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,0,0,*S,*Rn_4,1,1,1,1,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LSL{S}<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,1,*S,(0),(0),(0),(0),*Rd_4,*Rm_4,0,0,0,1,*Rn_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LSRS <Rd>, <Rm>, #<imm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,0,0,0,1,*imm_5,*Rm_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LSR{S}<c>.W <Rd>, <Rm>, #<imm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,0,1,0,*S,1,1,1,1,(0),*imm_3,*Rd_4,*imm_2,0,1,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LSR{S}<c> <Rd>, <Rm>, #<imm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,1,*S,(0),(0),(0),(0),*Rd_4,*imm_5,0,1,0,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LSRS <Rdn>, <Rm>'
    semantic: []
    mode: T1
    attribute: [ 'support_it_block' ]
    encoding: [ 0,1,0,0,0,0,0,0,1,1,*Rm_3,*Rdn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'LSR{S}<c>.W <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,0,1,*S,*Rn_4,1,1,1,1,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'LSR{S}<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,1,*S,(0),(0),(0),(0),*Rd_4,*Rm_4,0,0,1,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MCR<c> <coproc>, <opc1>, <Rt>, <CRn>, <CRm>{,<opc2>}'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,*opc1_3,0,*CRn_4,*Rt_4,*coproc,*opc2_3,1,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MCR<c> <coproc>, <opc1>, <Rt>, <CRn>, <CRm>{,<opc2>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,1,0,*opc1_3,0,*CRn_4,*Rt_4,*coproc,*opc2_3,1,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MCR2<c> <coproc>, <opc1>, <Rt>, <CRn>, <CRm>{,<opc2>}'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,0,*opc1_3,0,*CRn_4,*Rt_4,*coproc,*opc2_3,1,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MCR2<c> <coproc>, <opc1>, <Rt>, <CRn>, <CRm>{,<opc2>}'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ 1,1,1,1,1,1,1,0,*opc1_3,0,*CRn_4,*Rt_4,*coproc,*opc2_3,1,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MCRR<c> <coproc>, <opc1>, <Rt>, <Rt2>, <CRm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,0,0,1,0,0,*Rt2_4,*Rt_4,*coproc,*opc1_4,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MCRR<c> <coproc>, <opc1>, <Rt>, <Rt2>, <CRm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,0,0,0,1,0,0,*Rt2_4,*Rt_4,*coproc,*opc1_4,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MCRR2<c> <coproc>, <opc1>, <Rt>, <Rt2>, <CRm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,0,0,0,1,0,0,*Rt2_4,*Rt_4,*coproc,*opc1_4,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MCRR2<c> <coproc>, <opc1>, <Rt>, <Rt2>, <CRm>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ 1,1,1,1,1,1,0,0,0,1,0,0,*Rt2_4,*Rt_4,*coproc,*opc1_4,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MLA<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,0,0,0,*Rn_4,*Ra_4,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MLA{S}<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,0,0,1,*S,*Rd_4,*Ra_4,*Rm_4,1,0,0,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MLS<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,0,0,0,*Rn_4,*Ra_4,*Rd_4,0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MLS<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,0,1,1,0,*Rd_4,*Ra_4,*Rm_4,1,0,0,1,*Rn_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MOVS <Rd>, #<imm8>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,0,1,0,0,*Rd_3,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MOV{S}<c>.W <Rd>, #<const>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,0,0,1,0,*S,1,1,1,1,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MOVW<c> <Rd>, #<imm16>'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,1,0,0,1,0,0,*imm_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MOV{S}<c> <Rd>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,1,0,1,*S,(0),(0),(0),(0),*Rd_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MOVW<c> <Rd>, #<imm16>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ *cond,0,0,1,1,0,0,0,0,*imm_4,*Rd_4,*imm_12 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'MOV<c> <Rd>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,1,1,0,*D,*Rm_4,*Rd_3 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MOVS <Rd>, <Rm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 0,0,0,0,0,0,0,0,0,0,*Rm_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MOV{S}<c>.W <Rd>, <Rm>'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,0,1,0,*S,1,1,1,1,(0),0,0,0,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MOV{S}<c> <Rd>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,1,*S,(0),(0),(0),(0),*Rd_4,0,0,0,0,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MOVT<c> <Rd>, #<imm16>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,1,0,1,1,0,0,*imm_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MOVT<c> <Rd>, #<imm16>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,0,1,0,0,*imm_4,*Rd_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MRC<c> <coproc>, <opc1>, <Rt>, <CRn>, <CRm>{,<opc2>}'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,*opc1_3,1,*CRn_4,*Rt_4,*coproc,*opc2_3,1,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MRC<c> <coproc>, <opc1>, <Rt>, <CRn>, <CRm>{,<opc2>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,1,0,*opc1_3,1,*CRn_4,*Rt_4,*coproc,*opc2_3,1,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MRC2<c> <coproc>, <opc1>, <Rt>, <CRn>, <CRm>{,<opc2>}'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,0,*opc1_3,1,*CRn_4,*Rt_4,*coproc,*opc2_3,1,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MRC2<c> <coproc>, <opc1>, <Rt>, <CRn>, <CRm>{,<opc2>}'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ 1,1,1,1,1,1,1,0,*opc1_3,1,*CRn_4,*Rt_4,*coproc,*opc2_3,1,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MRRC<c> <coproc>, <opc>, <Rt>, <Rt2>, <CRm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,0,0,1,0,1,*Rt2_4,*Rt_4,*coproc,*opc1_4,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MRRC<c> <coproc>, <opc>, <Rt>, <Rt2>, <CRm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,0,0,0,1,0,1,*Rt2_4,*Rt_4,*coproc,*opc1_4,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MRRC2<c> <coproc>, <opc>, <Rt>, <Rt2>, <CRm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,0,0,0,1,0,1,*Rt2_4,*Rt_4,*coproc,*opc1_4,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MRRC2<c> <coproc>, <opc>, <Rt>, <Rt2>, <CRm>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ 1,1,1,1,1,1,0,0,0,1,0,1,*Rt2_4,*Rt_4,*coproc,*opc1_4,*CRm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MRS<c> <Rd>, <spec_reg>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,1,1,0,(1),(1),(1),(1),1,0,(0),0,*Rd_4,(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MRS<c> <Rd>, <spec_reg>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,0,0,0,(1),(1),(1),(1),*Rd_4,(0),(0),(0),(0),0,0,0,0,(0),(0),(0),(0) ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MSR<c> <spec_reg>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,0,0,1,0,*mask_2,0,0,(1),(1),(1),(1),*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MSR<c> <spec_reg>, <Rn>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,0,0,0,*Rn_4,1,0,(0),0,*mask_2,0,0,(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MSR<c> <spec_reg>, <Rn>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,0,1,0,*mask_2,0,0,(1),(1),(1),(1),(0),(0),(0),(0),0,0,0,0,*Rn_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MULS <Rdm>, <Rn>, <Rdm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,1,1,0,1,*Rn_3,*Rdm_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MUL<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,0,0,0,*Rn_4,1,1,1,1,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MUL{S}<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,0,0,0,*S,*Rd_4,(0),(0),(0),(0),*Rm_4,1,0,0,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MVN{S}<c> <Rd>, #<const>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,0,0,1,1,*S,1,1,1,1,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MVN{S}<c> <Rd>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,1,1,1,*S,(0),(0),(0),(0),*Rd_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MVNS <Rd>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,1,1,1,1,*Rm_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'MVN{S}<c>.W <Rd>, <Rm>{,<shift>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,0,1,1,*S,1,1,1,1,(0),*imm_3,*Rd_4,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MVN{S}<c> <Rd>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,1,1,*S,(0),(0),(0),(0),*Rd_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'MVN{S}<c> <Rd>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,1,1,*S,(0),(0),(0),(0),*Rd_4,*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'NOP<c>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'NOP<c>.W'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,0,1,0,(1),(1),(1),(1),1,0,(0),0,(0),0,0,0,0,0,0,0,0,0,0,0 ]

  - processor: ['ARMv6K', 'ARMv6T2', 'ARMv7']
    format: 'NOP<c>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,0,0,1,0,0,0,0,0,(1),(1),(1),(1),(0),(0),(0),(0),0,0,0,0,0,0,0,0 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ORN{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,0,0,1,1,*S,*Rn_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ORN{S}<c> <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,0,1,1,*S,*Rn_4,(0),*imm_3,*Rd_4,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ORR{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,0,0,1,0,*S,*Rn_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ORR{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,1,0,0,*S,*Rn_4,*Rd_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ORRS <Rdn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,1,1,0,0,*Rm_3,*Rdn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ORR{S}<c>.W <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,0,1,0,*S,*Rn_4,(0),*imm_3,*Rd_4,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ORR{S}<c> <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,0,*S,*Rn_4,*Rd_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ORR{S}<c> <Rd>, <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,0,*S,*Rn_4,*Rd_4,*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'PKHTB<c> <Rd>, <Rn>, <Rm>{,ASR #<imm>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,1,1,0,0,*Rn_4,(0),*imm_3,*Rd_4,*imm_2,*tb,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'PKHTB<c> <Rd>, <Rn>, <Rm>{,ASR #<imm>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,0,0,0,*Rn_4,*Rd_4,*imm_5,*tb,0,1,*Rm_4 ]

# NOTE: we had to change W → R since W stands for write back.
# NOTE: Thumb Mode uses 'R' instead of 'W'
  - processor: ['ARMv6T2', 'ARMv7']
    format: 'PLD{R}<c> [<Rn>, #<imm12>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,1,0,*R,1,*Rn_4,1,1,1,1,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'PLD{R}<c> [<Rn>, #-<imm8>]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,*R,1,*Rn_4,1,1,1,1,1,1,0,0,*imm_8 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'PLD{R} [<Rn>,#+/-<imm12>]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,1,0,1,*U,*R,0,1,*Rn_4,(1),(1),(1),(1),*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'PLD<c> [PC,#-0]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,*U,0,(0),1,1,1,1,1,1,1,1,1,*imm_12 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'PLD [PC,#-0]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,1,0,1,*U,(1),0,1,1,1,1,1,(1),(1),(1),(1),*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'PLD{R}<c> [<Rn>, <Rm>{,LSL #<imm2>}]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,*R,1,*Rn_4,1,1,1,1,0,0,0,0,0,0,*imm_2,*Rm_4 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'PLD{R}<c> [<Rn>,+/-<Rm>{,<shift>}]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,1,1,1,*U,*R,0,1,*Rn_4,(1),(1),(1),(1),*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv7']
    format: 'PLI<c> [<Rn>, #<imm12>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,1,0,0,1,*Rn_4,1,1,1,1,*imm_12 ]

  - processor: ['ARMv7']
    format: 'PLI<c> [<Rn>, #-<imm8>]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,0,0,0,1,*Rn_4,1,1,1,1,1,1,0,0,*imm_8 ]

  - processor: ['ARMv7']
    format: 'PLI<c> [PC,#-0]'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,*U,0,0,1,1,1,1,1,1,1,1,1,*imm_12 ]

  - processor: ['ARMv7']
    format: 'PLI [PC,#-0]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,1,0,0,*U,1,0,1,*Rn_4,(1),(1),(1),(1),*imm_12 ]

  - processor: ['ARMv7']
    format: 'PLI<c> [<Rn>, <Rm>{,LSL #<imm2>}]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,1,0,0,0,1,*Rn_4,1,1,1,1,0,0,0,0,0,0,*imm_2,*Rm_4 ]

  - processor: ['ARMv7']
    format: 'PLI [<Rn>,+/-<Rm>{,<shift>}]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,1,1,0,*U,1,0,1,*Rn_4,(1),(1),(1),(1),*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'POP<c> <registers>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,1,1,0,*P,*register_list_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'POP<c>.W <registers>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,0,1,0,1,1,1,1,0,1,*P,*M,(0),*register_list_13 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'POP<c>.W <Rt>'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,1,0,1,1,1,0,1,*Rt_4,1,0,1,1,0,0,0,0,0,1,0,0 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'POP<c> <registers>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,0,0,0,1,0,1,1,1,1,0,1,*register_list_16 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'POP<c> <Rt>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ *cond,0,1,0,0,1,0,0,1,1,1,0,1,*Rt_4,0,0,0,0,0,0,0,0,0,1,0,0 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'PUSH<c> <registers>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,0,1,0,*M,*register_list_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'PUSH<c>.W <registers>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,0,1,0,1,0,1,1,0,1,(0),*M,(0),*register_list_13 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'PUSH<c>.W <Rt>'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,1,0,0,1,1,0,1,*Rt_4,1,1,0,1,0,0,0,0,0,1,0,0 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'PUSH<c> <registers>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,0,0,1,0,0,1,0,1,1,0,1,*register_list_16 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'PUSH<c> <Rt>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ *cond,0,1,0,1,0,0,1,0,1,1,0,1,*Rt_4,0,0,0,0,0,0,0,0,0,1,0,0 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'QADD<c> <Rd>, <Rm>, <Rn>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,0,*Rn_4,1,1,1,1,*Rd_4,1,0,0,0,*Rm_4 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'QADD<c> <Rd>, <Rm>, <Rn>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,0,0,0,*Rn_4,*Rd_4,(0),(0),(0),(0),0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'QADD16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,1,*Rn_4,1,1,1,1,*Rd_4,0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'QADD16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'QADD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,0,*Rn_4,1,1,1,1,*Rd_4,0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'QADD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),1,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'QASX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,1,0,*Rn_4,1,1,1,1,*Rd_4,0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'QASX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),0,0,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'QDADD<c> <Rd>, <Rm>, <Rn>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,0,*Rn_4,1,1,1,1,*Rd_4,1,0,0,1,*Rm_4 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'QDADD<c> <Rd>, <Rm>, <Rn>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,1,0,0,*Rn_4,*Rd_4,(0),(0),(0),(0),0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'QDSUB<c> <Rd>, <Rm>, <Rn>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,0,*Rn_4,1,1,1,1,*Rd_4,1,0,1,1,*Rm_4 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'QDSUB<c> <Rd>, <Rm>, <Rn>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,1,1,0,*Rn_4,*Rd_4,(0),(0),(0),(0),0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'QSAX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,1,0,*Rn_4,1,1,1,1,*Rd_4,0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'QSAX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'QSUB<c> <Rd>, <Rm>, <Rn>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,0,*Rn_4,1,1,1,1,*Rd_4,1,0,1,0,*Rm_4 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'QSUB<c> <Rd>, <Rm>, <Rn>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,0,1,0,*Rn_4,*Rd_4,(0),(0),(0),(0),0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'QSUB16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,0,1,*Rn_4,1,1,1,1,*Rd_4,0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'QSUB16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'QSUB8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,0,0,*Rn_4,1,1,1,1,*Rd_4,0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'QSUB8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),1,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'RBIT<c> <Rd>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,1,*Rm_4,1,1,1,1,*Rd_4,1,0,1,0,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'RBIT<c> <Rd>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,1,1,1,(1),(1),(1),(1),*Rd_4,(1),(1),(1),(1),0,0,1,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'REV<c> <Rd>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,1,0,1,0,0,0,*Rm_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'REV<c>.W <Rd>, <Rm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,1,*Rm_4,1,1,1,1,*Rd_4,1,0,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'REV<c> <Rd>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,0,1,1,(1),(1),(1),(1),*Rd_4,(1),(1),(1),(1),0,0,1,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'REV16<c> <Rd>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,1,0,1,0,0,1,*Rm_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'REV16<c>.W <Rd>, <Rm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,1,*Rm_4,1,1,1,1,*Rd_4,1,0,0,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'REV16<c> <Rd>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,0,1,1,(1),(1),(1),(1),*Rd_4,(1),(1),(1),(1),1,0,1,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'REVSH<c> <Rd>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,1,0,1,0,1,1,*Rm_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'REVSH<c>.W <Rd>, <Rm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,1,*Rm_4,1,1,1,1,*Rd_4,1,0,1,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'REVSH<c> <Rd>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,1,1,1,(1),(1),(1),(1),*Rd_4,(1),(1),(1),(1),1,0,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ROR{S}<c> <Rd>, <Rm>, #<imm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,0,1,0,*S,1,1,1,1,(0),*imm_3,*Rd_4,*imm_2,1,1,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ROR{S}<c> <Rd>, <Rm>, #<imm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,1,*S,(0),(0),(0),(0),*Rd_4,*imm_5,1,1,0,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'RORS <Rdn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,0,1,1,1,*Rm_3,*Rdn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'ROR{S}<c>.W <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,1,1,*S,*Rn_4,1,1,1,1,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'ROR{S}<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,1,*S,(0),(0),(0),(0),*Rd_4,*Rm_4,0,1,1,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'RRX{S}<c> <Rd>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,0,1,0,*S,1,1,1,1,(0),0,0,0,*Rd_4,0,0,1,1,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'RRX{S}<c> <Rd>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,1,*S,(0),(0),(0),(0),*Rd_4,0,0,0,0,0,1,1,0,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'RSBS <Rd>, <Rn>, #0'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,1,0,0,1,*Rn_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'RSB{S}<c>.W <Rd>, <Rn>, #<const>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,1,1,1,0,*S,*Rn_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'RSB{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,0,0,1,1,*S,*Rn_4,*Rd_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'RSB{S}<c> <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,1,1,1,0,*S,*Rn_4,(0),*imm_3,*Rd_4,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'RSB{S}<c> <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,0,1,1,*S,*Rn_4,*Rd_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'RSB{S}<c> <Rd>, <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,0,1,1,*S,*Rn_4,*Rd_4,*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'RSC{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,0,1,1,1,*S,*Rn_4,*Rd_4,*imm_12 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'RSC{S}<c> <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,1,1,1,*S,*Rn_4,*Rd_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'RSC{S}<c> <Rd>, <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,1,1,1,*S,*Rn_4,*Rd_4,*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SADD16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,1,*Rn_4,1,1,1,1,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SADD16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,0,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SADD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,0,*Rn_4,1,1,1,1,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SADD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,0,1,*Rn_4,*Rd_4,(1),(1),(1),(1),1,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SASX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,1,0,*Rn_4,1,1,1,1,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SASX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,0,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,0,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SBC{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,1,0,1,1,*S,*Rn_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SBC{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,0,1,1,0,*S,*Rn_4,*Rd_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SBCS <Rdn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,0,1,1,0,*Rm_3,*Rdn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SBC{S}<c>.W <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,1,0,1,1,*S,*Rn_4,(0),*imm_3,*Rd_4,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SBC{S}<c> <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,1,1,0,*S,*Rn_4,*Rd_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SBC{S}<c> <Rd>, <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,1,1,0,*S,*Rn_4,*Rd_4,*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SBFX<c> <Rd>, <Rn>, #<lsb>, #<width>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,(0),1,1,0,1,0,0,*Rn_4,0,*imm_3,*Rd_4,*imm_2,(0),*widthm1 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SBFX<c> <Rd>, <Rn>, #<lsb>, #<width>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,1,0,1,*widthm1,*Rd_4,*lsb,1,0,1,*Rn_4 ]

  - processor: ['ARMv7-R']
    format: 'SDIV<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,1,0,0,1,*Rn_4,(1),(1),(1),(1),*Rd_4,1,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SEL<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,1,0,*Rn_4,1,1,1,1,*Rd_4,1,0,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SEL<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,0,0,0,*Rn_4,*Rd_4,(1),(1),(1),(1),1,0,1,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SETEND <endian_specifier>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,0,1,1,0,0,1,0,(1),*E,(0),(0),(0) ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SETEND <endian_specifier>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,0,1,0,0,0,0,(0),(0),(0),1,(0),(0),(0),(0),(0),(0),*E,(0),0,0,0,0,(0),(0),(0),(0) ]

  - processor: ['ARMv7', 'ARMv6T2)']
    format: 'SEV<c>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0 ]

  - processor: ['ARMv7', 'ARMv6T2)']
    format: 'SEV<c>.W'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,0,1,0,(1),(1),(1),(1),1,0,(0),0,(0),0,0,0,0,0,0,0,0,1,0,0 ]

  - processor: ['ARMv6K', 'ARMv7', 'ARMv6T2)']
    format: 'SEV<c>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,0,0,1,0,0,0,0,0,(1),(1),(1),(1),(0),(0),(0),(0),0,0,0,0,0,1,0,0 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SHADD16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,1,*Rn_4,1,1,1,1,*Rd_4,0,0,1,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SHADD16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,1,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SHADD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,0,*Rn_4,1,1,1,1,*Rd_4,0,0,1,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SHADD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,1,1,*Rn_4,*Rd_4,(1),(1),(1),(1),1,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SHASX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,1,0,*Rn_4,1,1,1,1,*Rd_4,0,0,1,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SHASX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,1,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,0,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SHSAX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,1,0,*Rn_4,1,1,1,1,*Rd_4,0,0,1,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SHSAX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,1,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SHSUB16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,0,1,*Rn_4,1,1,1,1,*Rd_4,0,0,1,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SHSUB16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,1,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SHSUB8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,0,0,*Rn_4,1,1,1,1,*Rd_4,0,0,1,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SHSUB8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,1,1,*Rn_4,*Rd_4,(1),(1),(1),(1),1,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMLA<x><y><c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,0,0,1,*Rn_4,*Ra_4,*Rd_4,0,0,*N,*M,*Rm_4 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'SMLA<x><y><c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,0,0,0,*Rd_4,*Ra_4,*Rm_4,1,*M,*N,0,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMLAD{X}<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,0,1,0,*Rn_4,*Ra_4,*Rd_4,0,0,0,*M,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SMLAD{X}<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,0,0,0,0,*Rd_4,*Ra_4,*Rm_4,0,0,*M,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMLAL<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,1,1,0,0,*Rn_4,*RdLo_4,*RdHi_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SMLAL{S}<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,1,1,1,*S,*RdHi_4,*RdLo_4,*Rm_4,1,0,0,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMLAL<x><y><c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,1,1,0,0,*Rn_4,*RdLo_4,*RdHi_4,1,0,*N,*M,*Rm_4 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'SMLAL<x><y><c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,1,0,0,*RdHi_4,*RdLo_4,*Rm_4,1,*M,*N,0,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMLALD{X}<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,1,1,0,0,*Rn_4,*RdLo_4,*RdHi_4,1,1,0,*M,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SMLALD{X}<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,0,1,0,0,*RdHi_4,*RdLo_4,*Rm_4,0,0,*M,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMLAW<y><c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,0,1,1,*Rn_4,*Ra_4,*Rd_4,0,0,0,*M,*Rm_4 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'SMLAW<y><c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,0,1,0,*Rd_4,*Ra_4,*Rm_4,1,*M,0,0,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMLSD{X}<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,1,0,0,*Rn_4,*Ra_4,*Rd_4,0,0,0,*M,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SMLSD{X}<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,0,0,0,0,*Rd_4,*Ra_4,*Rm_4,0,1,*M,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMLSLD{X}<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,1,1,0,1,*Rn_4,*RdLo_4,*RdHi_4,1,1,0,*M,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SMLSLD{X}<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,0,1,0,0,*RdHi_4,*RdLo_4,*Rm_4,0,1,*M,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMMLA{R}<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,1,0,1,*Rn_4,*Ra_4,*Rd_4,0,0,0,*R,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SMMLA{R}<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,0,1,0,1,*Rd_4,*Ra_4,*Rm_4,0,0,*R,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMMLS{R}<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,1,1,0,*Rn_4,*Ra_4,*Rd_4,0,0,0,*R,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SMMLS{R}<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,0,1,0,1,*Rd_4,*Ra_4,*Rm_4,1,1,*R,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMMUL{R}<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,1,0,1,*Rn_4,1,1,1,1,*Rd_4,0,0,0,*R,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SMMUL{R}<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,0,1,0,1,*Rd_4,1,1,1,1,*Rm_4,0,0,*R,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMUAD{X}<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,0,1,0,*Rn_4,1,1,1,1,*Rd_4,0,0,0,*M,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SMUAD{X}<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,0,0,0,0,*Rd_4,1,1,1,1,*Rm_4,0,0,*M,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMUL<x><y><c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,0,0,1,*Rn_4,1,1,1,1,*Rd_4,0,0,*N,*M,*Rm_4 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'SMUL<x><y><c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,1,1,0,*Rd_4,*SBZ,*Rm_4,1,*M,*N,0,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMULL<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,1,0,0,0,*Rn_4,*RdLo_4,*RdHi_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SMULL{S}<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,1,1,0,*S,*RdHi_4,*RdLo_4,*Rm_4,1,0,0,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMULW<y><c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,0,1,1,*Rn_4,1,1,1,1,*Rd_4,0,0,0,*M,*Rm_4 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'SMULW<y><c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,0,1,0,*Rd_4,*SBZ,*Rm_4,1,*M,1,0,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SMUSD{X}<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,1,0,0,*Rn_4,1,1,1,1,*Rd_4,0,0,0,*M,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SMUSD{X}<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,0,0,0,0,*Rd_4,1,1,1,1,*Rm_4,0,1,*M,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SSAT<c> <Rd>, #<imm>, <Rn>{,<shift>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,(0),1,1,0,0,*sh,0,*Rn_4,0,*imm_3,*Rd_4,*imm_2,(0),*sat_imm_5 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SSAT<c> <Rd>, #<imm>, <Rn>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,0,1,*sat_imm_5,*Rd_4,*imm_5,*sh,0,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SSAT16<c> <Rd>, #<imm>, <Rn>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,(0),1,1,0,0,1,0,*Rn_4,0,0,0,0,*Rd_4,0,0,(0),(0),*sat_imm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SSAT16<c> <Rd>, #<imm>, <Rn>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,0,1,0,*sat_imm_4,*Rd_4,(1),(1),(1),(1),0,0,1,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SSAX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,1,0,*Rn_4,1,1,1,1,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SSAX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,0,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SSUB16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,0,1,*Rn_4,1,1,1,1,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SSUB16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,0,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SSUB8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,0,0,*Rn_4,1,1,1,1,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SSUB8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,0,0,1,*Rn_4,*Rd_4,(1),(1),(1),(1),1,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STC{L}<c> <coproc>, <CRd>, [<Rn>, #+/-<imm>]{!}'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,*P,*U,*D,*W,0,*Rn_4,*CRd_4,*coproc,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STC{L}<c> <coproc>, <CRd>, [<Rn>],<option>'
    semantic: []
    mode: A1
    attribute: ['support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,0,*P,*U,*D,*W,0,*Rn_4,*CRd_4,*coproc,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STC2{L}<c> <coproc>, <CRd>, [<Rn>, #+/-<imm>]{!}'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,0,*P,*U,*D,*W,0,*Rn_4,*CRd_4,*coproc,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STC2{L}<c> <coproc>, <CRd>, [<Rn>],<option>'
    semantic: []
    mode: A2
    attribute: ['support_it_block', 'support_it_block']
    encoding: [ 1,1,1,1,1,1,0,*P,*U,*D,*W,0,*Rn_4,*CRd_4,*coproc,*imm_8 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STM<c> <Rn>!,<registers>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,0,0,0,*Rn_3,*register_list_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STM<c>.W <Rn>{!},<registers>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,0,1,0,*W,0,*Rn_4,(0),*M,(0),*register_list_13 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STM<c> <Rn>{!},<registers>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,0,0,0,1,0,*W,0,*Rn_4,*register_list_16 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STMDA<c> <Rn>{!},<registers>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,0,0,0,0,0,*W,0,*Rn_4,*register_list_16 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STMDB<c> <Rn>{!},<registers>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,1,0,0,*W,0,*Rn_4,(0),*M,(0),*register_list_13 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STMDB<c> <Rn>{!},<registers>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,0,0,1,0,0,*W,0,*Rn_4,*register_list_16 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STMIB<c> <Rn>{!},<registers>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,0,0,1,1,0,*W,0,*Rn_4,*register_list_16 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STR<c> <Rt>, [<Rn>{,#<imm>}]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,1,0,0,*imm_5,*Rn_3,*Rt_3 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STR<c> <Rt>, [SP, #<imm>]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,0,0,1,0,*Rt_3,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STR<c>.W <Rt>, [<Rn>, #<imm12>]'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,1,1,0,0,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STR<c> <Rt>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: T4
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,1,0,0,*Rn_4,*Rt_4,1,*P,*U,*W,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STR<c> <Rt>, [<Rn>,#+/-<imm12>]!'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,0,*P,*U,0,*W,0,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STR<c> <Rt>, [<Rn>, <Rm>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,1,0,0,0,*Rm_3,*Rn_3,*Rt_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STR<c>.W <Rt>, [<Rn>, <Rm>{,LSL #<imm2>}]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,1,0,0,*Rn_4,*Rt_4,0,0,0,0,0,0,*imm_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STR<c> <Rt>, [<Rn>],+/-<Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,*P,*U,0,*W,0,*Rn_4,*Rt_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STRB<c> <Rt>, [<Rn>, #<imm5>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,1,1,0,*imm_5,*Rn_3,*Rt_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STRB<c>.W <Rt>, [<Rn>, #<imm12>]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,1,0,0,0,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STRB<c> <Rt>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,0,0,*Rn_4,*Rt_4,1,*P,*U,*W,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STRB<c> <Rt>, [<Rn>,#+/-<imm12>]!'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,0,*P,*U,1,*W,0,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STRB<c> <Rt>, [<Rn>, <Rm>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,1,0,1,0,*Rm_3,*Rn_3,*Rt_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STRB<c>.W <Rt>, [<Rn>, <Rm>{,LSL #<imm2>}]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,0,0,*Rn_4,*Rt_4,0,0,0,0,0,0,*imm_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STRB<c> <Rt>, [<Rn>],+/-<Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,*P,*U,1,*W,0,*Rn_4,*Rt_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STRBT<c> <Rt>, [<Rn>, #<imm8>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,0,0,*Rn_4,*Rt_4,1,1,1,0,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STRBT<c> <Rt>, [<Rn>], #+/-<imm12>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,0,0,*U,1,1,0,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STRBT<c> <Rt>, [<Rn>],+/-<Rm>{,<shift>}'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ *cond,0,1,1,0,*U,1,1,0,*Rn_4,*Rt_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STRD<c> <Rt>, <Rt2>, [<Rn>, #+/-<imm>]!'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,*P,*U,1,*W,0,*Rn_4,*Rt_4,*Rt2_4,*imm_8 ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'STRD<c> <Rt>, <Rt2>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,*P,*U,1,*W,0,*Rn_4,*Rt_4,*imm_4H,1,1,1,1,*imm_4L ]

  - processor: ['ARMv5TE*', 'ARMv6*', 'ARMv7']
    format: 'STRD<c> <Rt>, <Rt2>, [<Rn>],+/-<Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,*P,*U,0,*W,0,*Rn_4,*Rt_4,(0),(0),(0),(0),1,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STREX<c> <Rd>, <Rt>, [<Rn>{,#<imm>}]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,0,0,1,0,0,*Rn_4,*Rt_4,*Rd_4,*imm_8 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'STREX<c> <Rd>, <Rt>, [<Rn>]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,0,0,*Rn_4,*Rd_4,(1),(1),(1),(1),1,0,0,1,*Rt_4 ]

  - processor: ['ARMv7']
    format: 'STREXB<c> <Rd>, <Rt>, [<Rn>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,0,1,1,0,0,*Rn_4,*Rt_4,(1),(1),(1),(1),0,1,0,0,*Rd_4 ]

  - processor: ['ARMv6K', 'ARMv7']
    format: 'STREXB<c> <Rd>, <Rt>, [<Rn>]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,1,0,0,*Rn_4,*Rd_4,(1),(1),(1),(1),1,0,0,1,*Rt_4 ]

  - processor: ['ARMv7']
    format: 'STREXD<c> <Rd>, <Rt>, <Rt2>, [<Rn>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,0,1,1,0,0,*Rn_4,*Rt_4,*Rt2_4,0,1,1,1,*Rd_4 ]

  - processor: ['ARMv6K', 'ARMv7']
    format: 'STREXD<c> <Rd>, <Rt>, <Rt2>, [<Rn>]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,0,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),1,0,0,1,*Rt_4 ]

  - processor: ['ARMv7']
    format: 'STREXH<c> <Rd>, <Rt>, [<Rn>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,0,1,1,0,0,*Rn_4,*Rt_4,(1),(1),(1),(1),0,1,0,1,*Rd_4 ]

  - processor: ['ARMv6K', 'ARMv7']
    format: 'STREXH<c> <Rd>, <Rt>, [<Rn>]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,1,1,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),1,0,0,1,*Rt_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STRH<c> <Rt>, [<Rn>{,#<imm>}]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,0,0,0,*imm_5,*Rn_3,*Rt_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STRH<c>.W <Rt>, [<Rn>{,#<imm12>}]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,1,0,1,0,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STRH<c> <Rt>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,1,0,*Rn_4,*Rt_4,1,*P,*U,*W,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STRH<c> <Rt>, [<Rn>, #+/-<imm8>]!'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,*P,*U,1,*W,0,*Rn_4,*Rt_4,*imm_4H,1,0,1,1,*imm_4L ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STRH<c> <Rt>, [<Rn>, <Rm>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,1,0,0,1,*Rm_3,*Rn_3,*Rt_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STRH<c>.W <Rt>, [<Rn>, <Rm>{,LSL #<imm2>}]'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,1,0,*Rn_4,*Rt_4,0,0,0,0,0,0,*imm_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STRH<c> <Rt>, [<Rn>],+/-<Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,*P,*U,0,*W,0,*Rn_4,*Rt_4,(0),(0),(0),(0),1,0,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STRHT<c> <Rt>, [<Rn>, #<imm8>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,0,1,0,*Rn_4,*Rt_4,1,1,1,0,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STRHT<c> <Rt>, [<Rn>] {,#+/-<imm8>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,*U,1,1,0,*Rn_4,*Rt_4,*imm_4H,1,0,1,1,*imm_4L ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STRHT<c> <Rt>, [<Rn>], +/-<Rm>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ *cond,0,0,0,0,*U,0,1,0,*Rn_4,*Rt_4,(0),(0),(0),(0),1,0,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'STRT<c> <Rt>, [<Rn>, #<imm8>]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,0,1,0,0,*Rn_4,*Rt_4,1,1,1,0,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STRT<c> <Rt>, [<Rn>] {,+/-<imm12>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,0,0,*U,0,1,0,*Rn_4,*Rt_4,*imm_12 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'STRT<c> <Rt>, [<Rn>],+/-<Rm>{,<shift>}'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ *cond,0,1,1,0,*U,0,1,0,*Rn_4,*Rt_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SUBS <Rd>, <Rn>, #<imm3>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,0,0,1,1,1,1,*imm_3,*Rn_3,*Rd_3 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SUBS <Rdn>, #<imm8>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 0,0,1,1,1,*Rdn_3,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SUB{S}<c>.W <Rd>, <Rn>, #<const>'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,1,1,0,1,*S,*Rn_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SUBW<c> <Rd>, <Rn>, #<imm12>'
    semantic: []
    mode: T4
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,1,0,1,0,1,0,*Rn_4,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SUB{S}<c> <Rd>, <Rn>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,0,0,1,0,*S,*Rn_4,*Rd_4,*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SUBS <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,0,0,1,1,0,1,*Rm_3,*Rn_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SUB{S}<c>.W <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,1,1,0,1,*S,*Rn_4,(0),*imm_3,*Rd_4,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SUB{S}<c> <Rd>, <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,0,1,0,*S,*Rn_4,*Rd_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SUB{S}<c> <Rd>, <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,0,1,0,*S,*Rn_4,*Rd_4,*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SUB<c> SP,SP, #<imm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,0,0,0,0,1,*imm_7 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SUB{S}<c>.W <Rd>,SP, #<const>'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,1,1,0,1,*S,1,1,0,1,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SUBW<c> <Rd>,SP, #<imm12>'
    semantic: []
    mode: T3
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,1,0,1,0,1,0,1,1,0,1,0,*imm_3,*Rd_4,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SUB{S}<c> <Rd>,SP, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,0,0,1,0,*S,1,1,0,1,*Rd_4,*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SUB{S}<c> <Rd>, SP, <Rm>{,<shift>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,1,1,0,1,*S,1,1,0,1,(0),*imm_3,*Rd_4,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SUB{S}<c> <Rd>, SP, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,0,1,0,*S,1,1,0,1,*Rd_4,*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SVC<c> #<imm8>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,0,1,1,1,1,1,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SVC<c> #<imm24>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,1,1,*imm_24 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'SWP{B}<c> <Rt>, <Rt2>, [<Rn>]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,*B,0,0,*Rn_4,*Rt_4,(0),(0),(0),(0),1,0,0,1,*Rt2_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SXTAB<c> <Rd>, <Rn>, <Rm>{,<rotation>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,1,0,0,*Rn_4,1,1,1,1,*Rd_4,1,(0),*rotate,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SXTAB<c> <Rd>, <Rn>, <Rm>{,<rotation>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,0,1,0,*Rn_4,*Rd_4,*rotate,(0),(0),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SXTAB16<c> <Rd>, <Rn>, <Rm>{,<rotation>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,0,1,0,*Rn_4,1,1,1,1,*Rd_4,1,(0),*rotate,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SXTAB16<c> <Rd>, <Rn>, <Rm>{,<rotation>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,0,0,0,*Rn_4,*Rd_4,*rotate,(0),(0),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SXTAH<c> <Rd>, <Rn>, <Rm>{,<rotation>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,0,0,0,*Rn_4,1,1,1,1,*Rd_4,1,(0),*rotate,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SXTAH<c> <Rd>, <Rn>, <Rm>{,<rotation>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,0,1,1,*Rn_4,*Rd_4,*rotate,(0),(0),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SXTB<c> <Rd>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,0,0,1,0,0,1,*Rm_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SXTB<c>.W <Rd>, <Rm>{,<rotation>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,1,0,0,1,1,1,1,1,1,1,1,*Rd_4,1,(0),*rotate,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SXTB<c> <Rd>, <Rm>{,<rotation>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,0,1,0,1,1,1,1,*Rd_4,*rotate,(0),(0),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SXTB16<c> <Rd>, <Rm>{,<rotation>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,*Rd_4,1,(0),*rotate,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SXTB16<c> <Rd>, <Rm>{,<rotation>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,0,0,0,1,1,1,1,*Rd_4,*rotate,(0),(0),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SXTH<c> <Rd>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,0,0,1,0,0,0,*Rm_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'SXTH<c>.W <Rd>, <Rm>{,<rotation>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,*Rd_4,1,(0),*rotate,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'SXTH<c> <Rd>, <Rm>{,<rotation>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,0,1,1,1,1,1,1,*Rd_4,*rotate,(0),(0),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'TBH<c> [<Rn>, <Rm>,LSL #1]'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,0,0,1,1,0,1,*Rn_4,(1),(1),(1),(1),(0),(0),(0),(0),0,0,0,*H,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'TEQ<c> <Rn>, #<const>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,0,1,0,0,1,*Rn_4,0,*imm_3,1,1,1,1,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'TEQ<c> <Rn>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,0,0,1,1,*Rn_4,(0),(0),(0),(0),*imm_12 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'TEQ<c> <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,1,0,0,1,*Rn_4,(0),*imm_3,1,1,1,1,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'TEQ<c> <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,0,1,1,*Rn_4,(0),(0),(0),(0),*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'TEQ<c> <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,0,1,1,*Rn_4,(0),(0),(0),(0),*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'TST<c> <Rn>, #<const>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,*imm_1,0,0,0,0,0,1,*Rn_4,0,*imm_3,1,1,1,1,*imm_8 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'TST<c> <Rn>, #<const>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,0,0,0,1,*Rn_4,(0),(0),(0),(0),*imm_12 ]

  - processor: ['ARMv4T', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'TST<c> <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 0,1,0,0,0,0,1,0,0,0,*Rm_3,*Rn_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'TST<c>.W <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,0,1,0,1,0,0,0,0,1,*Rn_4,(0),*imm_3,1,1,1,1,*imm_2,*type_2,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'TST<c> <Rn>, <Rm>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,0,0,1,*Rn_4,(0),(0),(0),(0),*imm_5,*type_2,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'TST<c> <Rn>, <Rm>, <type> <Rs>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,1,0,0,0,1,*Rn_4,(0),(0),(0),(0),*Rs_4,0,*type_2,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UADD16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,1,*Rn_4,1,1,1,1,*Rd_4,0,1,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UADD16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,0,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UADD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,0,*Rn_4,1,1,1,1,*Rd_4,0,1,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UADD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,0,1,*Rn_4,*Rd_4,(1),(1),(1),(1),1,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UASX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,1,0,*Rn_4,1,1,1,1,*Rd_4,0,1,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UASX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,0,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,0,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UBFX<c> <Rd>, <Rn>, #<lsb>, #<width>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,(0),1,1,1,1,0,0,*Rn_4,0,*imm_3,*Rd_4,*imm_2,(0),*widthm1 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UBFX<c> <Rd>, <Rn>, #<lsb>, #<width>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,1,1,1,*widthm1,*Rd_4,*lsb,1,0,1,*Rn_4 ]

  - processor: ['ARMv7-R']
    format: 'UDIV<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,1,0,1,1,*Rn_4,(1),(1),(1),(1),*Rd_4,1,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UHADD16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,1,*Rn_4,1,1,1,1,*Rd_4,0,1,1,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UHADD16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,1,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UHADD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,0,*Rn_4,1,1,1,1,*Rd_4,0,1,1,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UHADD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,1,1,*Rn_4,*Rd_4,(1),(1),(1),(1),1,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UHASX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,1,0,*Rn_4,1,1,1,1,*Rd_4,0,1,1,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UHASX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,1,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,0,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UHSAX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,1,0,*Rn_4,1,1,1,1,*Rd_4,0,1,1,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UHSAX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,1,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UHSUB16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,0,1,*Rn_4,1,1,1,1,*Rd_4,0,1,1,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UHSUB16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,1,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UHSUB8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,0,0,*Rn_4,1,1,1,1,*Rd_4,0,1,1,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UHSUB8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,1,1,*Rn_4,*Rd_4,(1),(1),(1),(1),1,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UMAAL<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,1,1,1,0,*Rn_4,*RdLo_4,*RdHi_4,0,1,1,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UMAAL<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,0,1,0,0,*RdHi_4,*RdLo_4,*Rm_4,1,0,0,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UMLAL<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,1,1,1,0,*Rn_4,*RdLo_4,*RdHi_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'UMLAL{S}<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,1,0,1,*S,*RdHi_4,*RdLo_4,*Rm_4,1,0,0,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UMULL<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,1,0,1,0,*Rn_4,*RdLo_4,*RdHi_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv4*', 'ARMv5T*', 'ARMv6*', 'ARMv7']
    format: 'UMULL{S}<c> <RdLo>, <RdHi>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,0,0,1,0,0,*S,*RdHi_4,*RdLo_4,*Rm_4,1,0,0,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UQADD16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,1,*Rn_4,1,1,1,1,*Rd_4,0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UQADD16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),0,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UQADD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,0,0,*Rn_4,1,1,1,1,*Rd_4,0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UQADD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),1,0,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UQASX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,0,1,0,*Rn_4,1,1,1,1,*Rd_4,0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UQASX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),0,0,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UQSAX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,1,0,*Rn_4,1,1,1,1,*Rd_4,0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UQSAX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UQSUB16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,0,1,*Rn_4,1,1,1,1,*Rd_4,0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UQSUB16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UQSUB8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,0,0,*Rn_4,1,1,1,1,*Rd_4,0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UQSUB8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,1,0,*Rn_4,*Rd_4,(1),(1),(1),(1),1,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'USAD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,1,1,1,*Rn_4,1,1,1,1,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'USAD8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,1,0,0,0,*Rd_4,1,1,1,1,*Rm_4,0,0,0,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'USADA8<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,1,0,1,1,1,*Rn_4,*Ra_4,*Rd_4,0,0,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'USADA8<c> <Rd>, <Rn>, <Rm>, <Ra>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,1,1,0,0,0,*Rd_4,*Ra_4,*Rm_4,0,0,0,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'USAT<c> <Rd>, #<imm5>, <Rn>{,<shift>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,(0),1,1,1,0,*sh,0,*Rn_4,0,*imm_3,*Rd_4,*imm_2,(0),*sat_imm_5 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'USAT<c> <Rd>, #<imm5>, <Rn>{,<shift>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,1,1,*sat_imm_5,*Rd_4,*imm_5,*sh,0,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'USAT16<c> <Rd>, #<imm4>, <Rn>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,0,(0),1,1,1,0,1,0,*Rn_4,0,0,0,0,*Rd_4,0,0,(0),(0),*sat_imm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'USAT16<c> <Rd>, #<imm4>, <Rn>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,1,1,0,*sat_imm_4,*Rd_4,(1),(1),(1),(1),0,0,1,1,*Rn_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'USAX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,1,0,*Rn_4,1,1,1,1,*Rd_4,0,1,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'USAX<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,0,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,1,0,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'USUB16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,0,1,*Rn_4,1,1,1,1,*Rd_4,0,1,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'USUB16<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,0,1,*Rn_4,*Rd_4,(1),(1),(1),(1),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'USUB8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,1,1,0,0,*Rn_4,1,1,1,1,*Rd_4,0,1,0,0,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'USUB8<c> <Rd>, <Rn>, <Rm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,0,1,0,1,*Rn_4,*Rd_4,(1),(1),(1),(1),1,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UXTAB<c> <Rd>, <Rn>, <Rm>{,<rotation>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,1,0,1,*Rn_4,1,1,1,1,*Rd_4,1,(0),*rotate,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UXTAB<c> <Rd>, <Rn>, <Rm>{,<rotation>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,1,1,0,*Rn_4,*Rd_4,*rotate,(0),(0),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UXTAB16<c> <Rd>, <Rn>, <Rm>{,<rotation>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,0,1,1,*Rn_4,1,1,1,1,*Rd_4,1,(0),*rotate,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UXTAB16<c> <Rd>, <Rn>, <Rm>{,<rotation>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,1,0,0,*Rn_4,*Rd_4,*rotate,(0),(0),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UXTAH<c> <Rd>, <Rn>, <Rm>{,<rotation>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,0,0,1,*Rn_4,1,1,1,1,*Rd_4,1,(0),*rotate,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UXTAH<c> <Rd>, <Rn>, <Rm>{,<rotation>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,1,1,1,*Rn_4,*Rd_4,*rotate,(0),(0),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UXTB<c> <Rd>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,0,0,1,0,1,1,*Rm_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UXTB<c>.W <Rd>, <Rm>{,<rotation>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,*Rd_4,1,(0),*rotate,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UXTB<c> <Rd>, <Rm>{,<rotation>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,1,1,0,1,1,1,1,*Rd_4,*rotate,(0),(0),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UXTB16<c> <Rd>, <Rm>{,<rotation>}'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,*Rd_4,1,(0),*rotate,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UXTB16<c> <Rd>, <Rm>{,<rotation>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,1,0,0,1,1,1,1,*Rd_4,*rotate,(0),(0),0,1,1,1,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UXTH<c> <Rd>, <Rm>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,0,0,1,0,1,0,*Rm_3,*Rd_3 ]

  - processor: ['ARMv6T2', 'ARMv7']
    format: 'UXTH<c>.W <Rd>, <Rm>{,<rotation>}'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,*Rd_4,1,(0),*rotate,*Rm_4 ]

  - processor: ['ARMv6*', 'ARMv7']
    format: 'UXTH<c> <Rd>, <Rm>{,<rotation>}'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,1,1,0,1,1,1,1,1,1,1,1,*Rd_4,*rotate,(0),(0),0,1,1,1,*Rm_4 ]

  - processor: []
    format: 'VABA<c>.<dt> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,0,1,1,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VABA<c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,0,1,1,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VABAL<c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*size,*Vn,*Vd,0,1,0,1,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VABAL<c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*size,*Vn,*Vd,0,1,0,1,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VABD<c>.<dt> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,0,1,1,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VABD<c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,0,1,1,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VABDL<c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*size,*Vn,*Vd,0,1,1,1,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VABDL<c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*size,*Vn,*Vd,0,1,1,1,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VABD<c>.F32 <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,0,*D,1,*sz,*Vn,*Vd,1,1,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VABD<c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,0,*D,1,*sz,*Vn,*Vd,1,1,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VABS<c>.<dt> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,1,1,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VABS<c>.<dt> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,1,1,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VABS<c>.F64 <Dd>, <Dm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,*D,1,1,0,0,0,0,*Vd,1,0,1,*sz,1,1,*M,0,*Vm ]

  - processor: []
    format: 'VABS<c>.F32 <Sd>, <Sm>'
    semantic: []
    mode: A2
    attribute: ['support_it_block', 'support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,1,*D,1,1,0,0,0,0,*Vd,1,0,1,*sz,1,1,*M,0,*Vm ]

  - processor: []
    format: 'V<op><c>.F32 <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,0,*D,*op_1,*sz,*Vn,*Vd,1,1,1,0,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'V<op><c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,0,*D,*op_1,*sz,*Vn,*Vd,1,1,1,0,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VADD<c>.<dt> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,*size,*Vn,*Vd,1,0,0,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VADD<c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,*size,*Vn,*Vd,1,0,0,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VADD<c>.F32 <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,0,*sz,*Vn,*Vd,1,1,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VADD<c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,0,*sz,*Vn,*Vd,1,1,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VADD<c>.F64 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,0,*D,1,1,*Vn,*Vd,1,0,1,*sz,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VADD<c>.F32 <Sd>, <Sn>, <Sm>'
    semantic: []
    mode: A2
    attribute: ['support_it_block', 'support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,0,*D,1,1,*Vn,*Vd,1,0,1,*sz,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VADDHN<c>.<dt> <Dd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,1,*D,*size,*Vn,*Vd,0,1,0,0,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VADDHN<c>.<dt> <Dd>, <Qn>, <Qm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,0,1,*D,*size,*Vn,*Vd,0,1,0,0,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VADDL<c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*size,*Vn,*Vd,0,0,0,*op_1,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VADDW<c>.<dt> <Qd>, <Qn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*size,*Vn,*Vd,0,0,0,*op_1,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VAND<c> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,0,0,*Vn,*Vd,0,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VAND<c> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,0,0,*Vn,*Vd,0,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VBIC<c>.<dt> <Qd>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*imm_1,1,1,1,1,1,*D,0,0,0,*imm_3,*Vd,*cmode,0,*Q,1,1,*imm_4 ]

  - processor: []
    format: 'VBIC<c>.<dt> <Dd>, #<imm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*imm_1,1,*D,0,0,0,*imm_3,*Vd,*cmode,0,*Q,1,1,*imm_4 ]

  - processor: []
    format: 'VBIC<c> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,0,1,*Vn,*Vd,0,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VBIC<c> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,0,1,*Vn,*Vd,0,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'V<op><c> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,0,*D,*op_2,*Vn,*Vd,0,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'V<op><c> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,0,*D,*op_2,*Vn,*Vd,0,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VCEQ<c>.<dt> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,0,*D,*size,*Vn,*Vd,1,0,0,0,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VCEQ<c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,0,*D,*size,*Vn,*Vd,1,0,0,0,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VCEQ<c>.F32 <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,0,*sz,*Vn,*Vd,1,1,1,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCEQ<c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,0,*sz,*Vn,*Vd,1,1,1,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCEQ<c>.<dt> <Qd>, <Qm>, #0'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,0,1,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCEQ<c>.<dt> <Dd>, <Dm>, #0'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,0,1,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCGE<c>.<dt> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,0,0,1,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VCGE<c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,0,0,1,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VCGE<c>.F32 <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,0,*D,0,*sz,*Vn,*Vd,1,1,1,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCGE<c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,0,*D,0,*sz,*Vn,*Vd,1,1,1,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCGE<c>.<dt> <Qd>, <Qm>, #0'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,0,0,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCGE<c>.<dt> <Dd>, <Dm>, #0'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,0,0,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCGT<c>.<dt> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,0,0,1,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCGT<c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,0,0,1,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCGT<c>.F32 <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,0,*D,1,*sz,*Vn,*Vd,1,1,1,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCGT<c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,0,*D,1,*sz,*Vn,*Vd,1,1,1,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCGT<c>.<dt> <Qd>, <Qm>, #0'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,0,0,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCGT<c>.<dt> <Dd>, <Dm>, #0'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,0,0,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCLE<c>.<dt> <Qd>, <Qm>, #0'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,0,1,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCLE<c>.<dt> <Dd>, <Dm>, #0'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,0,1,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCLS<c>.<dt> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,0,0,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCLS<c>.<dt> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,0,0,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCLT<c>.<dt> <Qd>, <Qm>, #0'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,1,0,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCLT<c>.<dt> <Dd>, <Dm>, #0'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,1,0,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCLZ<c>.<dt> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,0,0,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCLZ<c>.<dt> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,0,0,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCMP{E}<c>.F64 <Dd>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,*D,1,1,0,1,0,0,*Vd,1,0,1,*sz,*E,1,*M,0,*Vm ]

  - processor: []
    format: 'VCMP{E}<c>.F32 <Sd>, <Sm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ *cond,1,1,1,0,1,*D,1,1,0,1,0,0,*Vd,1,0,1,*sz,*E,1,*M,0,*Vm ]

  - processor: []
    format: 'VCMP{E}<c>.F64 <Dd>, #0.0'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,*D,1,1,0,1,0,1,*Vd,1,0,1,*sz,*E,1,(0),0,(0),(0),(0),(0) ]

  - processor: []
    format: 'VCMP{E}<c>.F32 <Sd>, #0.0'
    semantic: []
    mode: A2
    attribute: ['support_it_block']
    encoding: [ *cond,1,1,1,0,1,*D,1,1,0,1,0,1,*Vd,1,0,1,*sz,*E,1,(0),0,(0),(0),(0),(0) ]

  - processor: []
    format: 'VCNT<c>.8 <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,0,1,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCNT<c>.8 <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,0,1,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCVT<c>.<Td>.<Tm> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,1,1,*Vd,0,1,1,*op_2,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCVT<c>.<Td>.<Tm> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,1,1,*Vd,0,1,1,*op_2,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VCVT{R}<c>.S32.F64 <Sd>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,*D,1,1,1,*opc2_3,*Vd,1,0,1,*sz,*op_1,1,*M,0,*Vm ]

  - processor: []
    format: 'VCVT<c>.F32.<Tm> <Sd>, <Sm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block', 'support_it_block', 'support_it_block', 'support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,1,*D,1,1,1,*opc2_3,*Vd,1,0,1,*sz,*op_1,1,*M,0,*Vm ]

  - processor: []
    format: 'VCVT<c>.<Td>.<Tm> <Qd>, <Qm>, #<fbits>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*imm_6,*Vd,1,1,1,*op_1,0,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VCVT<c>.<Td>.<Tm> <Dd>, <Dm>, #<fbits>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*imm_6,*Vd,1,1,1,*op_1,0,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VCVT<c>.<Td>.F64 <Dd>, <Dd>, #<fbits>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,*D,1,1,1,*op_1,1,*U,*Vd,1,0,1,*sf,*sx,1,*imm_1,0,*imm_4 ]

  - processor: []
    format: 'VCVT<c>.F32.<Td> <Sd>, <Sd>, #<fbits>'
    semantic: []
    mode: A1
    attribute: ['support_it_block', 'support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,1,*D,1,1,1,*op_1,1,*U,*Vd,1,0,1,*sf,*sx,1,*imm_1,0,*imm_4 ]

  - processor: []
    format: 'VCVT<c>.F64.F32 <Dd>, <Sm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,*D,1,1,0,1,1,1,*Vd,1,0,1,*sz,1,1,*M,0,*Vm ]

  - processor: []
    format: 'VCVT<c>.F32.F64 <Sd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ *cond,1,1,1,0,1,*D,1,1,0,1,1,1,*Vd,1,0,1,*sz,1,1,*M,0,*Vm ]

  - processor: []
    format: 'VCVT<c>.F32.F16 <Qd>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,1,0,*Vd,0,1,1,*op_1,0,0,*M,0,*Vm ]

  - processor: []
    format: 'VCVT<c>.F16.F32 <Dd>, <Qm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,1,0,*Vd,0,1,1,*op_1,0,0,*M,0,*Vm ]

  - processor: []
    format: 'VCVT<y><c>.F32.F16 <Sd>, <Sm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,*D,1,1,0,0,1,*op_1,*Vd,1,0,1,0,*T,1,*M,0,*Vm ]

  - processor: []
    format: 'VCVT<y><c>.F16.F32 <Sd>, <Sm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ *cond,1,1,1,0,1,*D,1,1,0,0,1,*op_1,*Vd,1,0,1,0,*T,1,*M,0,*Vm ]

  - processor: []
    format: 'VDIV<c>.F64 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,*D,0,0,*Vn,*Vd,1,0,1,*sz,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VDIV<c>.F32 <Sd>, <Sn>, <Sm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block', 'support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,1,*D,0,0,*Vn,*Vd,1,0,1,*sz,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VDUP<c>.<size> <Qd>, <Dm[x]>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*imm_4,*Vd,1,1,0,0,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VDUP<c>.<size> <Dd>, <Dm[x]>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*imm_4,*Vd,1,1,0,0,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VDUP<c>.<size>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,*b,*Q,0,*Vd,*Rt_4,1,0,1,1,*D,0,*e,1,(0),(0),(0),(0) ]

  - processor: []
    format: 'VDUP<c>.<size>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ *cond,1,1,1,0,1,*b,*Q,0,*Vd,*Rt_4,1,0,1,1,*D,0,*e,1,(0),(0),(0),(0) ]

  - processor: []
    format: 'VEOR<c> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,0,*D,0,0,*Vn,*Vd,0,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VEOR<c> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,0,*D,0,0,*Vn,*Vd,0,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VEXT<c>.8 <Qd>, <Qn>, <Qm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,1,*D,1,1,*Vn,*Vd,*imm_4,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VEXT<c>.8 <Dd>, <Dn>, <Dm>, #<imm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,1,*D,1,1,*Vn,*Vd,*imm_4,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VH<op><c> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,0,0,*op_1,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VH<op><c> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,0,0,*op_1,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VLD1<c>.<size> <list>, [<Rn>{@<align>}]{!}'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,0,0,1,0,*D,1,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]

  - processor: []
    format: 'VLD1<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block', 'support_it_block']
    encoding: [ 1,1,1,1,0,1,0,0,0,*D,1,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]

  - processor: []
    format: 'VLD1<c>.<size> <list>, [<Rn>{@<align>}]{!}'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,0,0,1,1,*D,1,0,*Rn_4,*Vd,*size,0,0,*index_align,*Rm_4 ]

  - processor: []
    format: 'VLD1<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,1,0,0,1,*D,1,0,*Rn_4,*Vd,*size,0,0,*index_align,*Rm_4 ]

  - processor: []
    format: 'VLD1<c>.<size> <list>, [<Rn>{@<align>}]{!}'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,0,0,1,1,*D,1,0,*Rn_4,*Vd,1,1,0,0,*size,*T,*a,*Rm_4 ]

  - processor: []
    format: 'VLD1<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,1,0,0,1,*D,1,0,*Rn_4,*Vd,1,1,0,0,*size,*T,*a,*Rm_4 ]

##  - processor: []
##    format: 'VLD2<c>.<size> <list>, [<Rn>{@<align>}]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,0,*D,1,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD2<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block', 'support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,0,*D,1,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD2<c>.<size> <list>, [<Rn>{@<align>}]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,1,*D,1,0,*Rn_4,*Vd,*size,0,1,*index_align,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD2<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,1,*D,1,0,*Rn_4,*Vd,*size,0,1,*index_align,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD2<c>.<size> <list>, [<Rn>{@<align>}]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,1,*D,1,0,*Rn_4,*Vd,1,1,0,1,*size,*T,*a,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD2<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,1,*D,1,0,*Rn_4,*Vd,1,1,0,1,*size,*T,*a,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD3<c>.<size> <list>, [<Rn>{@<align>}]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,0,*D,1,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD3<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block', 'support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,0,*D,1,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD3<c>.<size> <list>, [<Rn>]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,1,*D,1,0,*Rn_4,*Vd,*size,1,0,*index_align,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD3<c>.<size> <list>, [<Rn>], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,1,*D,1,0,*Rn_4,*Vd,*size,1,0,*index_align,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD3<c>.<size> <list>, [<Rn>]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,1,*D,1,0,*Rn_4,*Vd,1,1,1,0,*size,*T,*a,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD3<c>.<size> <list>, [<Rn>], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,1,*D,1,0,*Rn_4,*Vd,1,1,1,0,*size,*T,*a,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD4<c>.<size> <list>, [<Rn>{@<align>}]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,0,*D,1,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD4<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block', 'support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,0,*D,1,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD4<c>.<size> <list>, [<Rn>{@<align>}]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,1,*D,1,0,*Rn_4,*Vd,*size,1,1,*index_align,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD4<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,1,*D,1,0,*Rn_4,*Vd,*size,1,1,*index_align,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD4<c>.<size> <list>, [<Rn>{ @<align>}]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,1,*D,1,0,*Rn_4,*Vd,1,1,1,1,*size,*T,*a,*Rm_4 ]
##
##  - processor: []
##    format: 'VLD4<c>.<size> <list>, [<Rn>{ @<align>}], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,1,*D,1,0,*Rn_4,*Vd,1,1,1,1,*size,*T,*a,*Rm_4 ]

  - processor: []
    format: 'VLDM{mode}<c> <Rn>{!}, <list>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,*P,*U,*D,*W,1,*Rn_4,*Vd,1,0,1,1,*imm_8 ]

  - processor: []
    format: 'VLDM{mode}<c> <Rn>{!}, <list>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,0,*P,*U,*D,*W,1,*Rn_4,*Vd,1,0,1,1,*imm_8 ]

  - processor: []
    format: 'VLDM{mode}<c> <Rn>{!}, <list>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,*P,*U,*D,*W,1,*Rn_4,*Vd,1,0,1,0,*imm_8 ]

  - processor: []
    format: 'FLDMX'
    semantic: []
    mode: A2
    attribute: ['support_it_block']
    encoding: [ *cond,1,1,0,*P,*U,*D,*W,1,*Rn_4,*Vd,1,0,1,0,*imm_8 ]

  - processor: []
    format: 'VLDR<c> <Dd>, [<Rn>{,#+/-<imm>}]'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,1,*U,*D,0,1,*Rn_4,*Vd,1,0,1,1,*imm_8 ]

  - processor: []
    format: 'VLDR<c> <Dd>, [PC,#-0]'
    semantic: []
    mode: A1
    attribute: ['support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,0,1,*U,*D,0,1,*Rn_4,*Vd,1,0,1,1,*imm_8 ]

  - processor: []
    format: 'VLDR<c> <Sd>, [<Rn>{,#+/-<imm>}]'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,1,*U,*D,0,1,*Rn_4,*Vd,1,0,1,0,*imm_8 ]

  - processor: []
    format: 'VLDR<c> <Sd>, [PC,#-0]'
    semantic: []
    mode: A2
    attribute: ['support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,0,1,*U,*D,0,1,*Rn_4,*Vd,1,0,1,0,*imm_8 ]

  - processor: []
    format: 'V<op><c>.<dt> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,0,1,1,0,*N,*Q,*M,*op_1,*Vm ]

  - processor: []
    format: 'V<op><c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,0,1,1,0,*N,*Q,*M,*op_1,*Vm ]

  - processor: []
    format: 'V<op><c>.F32 <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,*op_1,*sz,*Vn,*Vd,1,1,1,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'V<op><c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,*op_1,*sz,*Vn,*Vd,1,1,1,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'V<op><c>.<dt> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*op_1,1,1,1,1,0,*D,*size,*Vn,*Vd,1,0,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'V<op><c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*op_1,0,*D,*size,*Vn,*Vd,1,0,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'V<op>L<c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*size,*Vn,*Vd,1,0,*op_1,0,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'V<op>L<c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*size,*Vn,*Vd,1,0,*op_1,0,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'V<op><c>.F32 <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,*op_1,*sz,*Vn,*Vd,1,1,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'V<op><c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,*op_1,*sz,*Vn,*Vd,1,1,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'V<op><c>.F64 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,0,*D,0,0,*Vn,*Vd,1,0,1,*sz,*N,*op_1,*M,0,*Vm ]

  - processor: []
    format: 'V<op><c>.F32 <Sd>, <Sn>, <Sm>'
    semantic: []
    mode: A2
    attribute: ['support_it_block', 'support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,0,*D,0,0,*Vn,*Vd,1,0,1,*sz,*N,*op_1,*M,0,*Vm ]

  - processor: []
    format: 'V<op><c>.<dt> <Qd>, <Qn>, <Dm[x]>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*Q,1,1,1,1,1,*D,*size,*Vn,*Vd,0,*op_1,0,*F,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'V<op><c>.<dt> <Dd>, <Dn>, <Dm[x]>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*Q,1,*D,*size,*Vn,*Vd,0,*op_1,0,*F,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'V<op>L<c>.<dt> <Qd>, <Dn>, <Dm[x]>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*size,*Vn,*Vd,0,*op_1,1,0,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'V<op>L<c>.<dt> <Qd>, <Dn>, <Dm[x]>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*size,*Vn,*Vd,0,*op_1,1,0,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VMOV<c>.<dt> <Qd>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*imm_1,1,1,1,1,1,*D,0,0,0,*imm_3,*Vd,*cmode,0,*Q,*op_1,1,*imm_4 ]

  - processor: []
    format: 'VMOV<c>.<dt> <Dd>, #<imm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*imm_1,1,*D,0,0,0,*imm_3,*Vd,*cmode,0,*Q,*op_1,1,*imm_4 ]

  - processor: []
    format: 'VMOV<c>.F64 <Dd>, #<imm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,*D,1,1,*imm_4H,*Vd,1,0,1,*sz,(0),0,(0),0,*imm_4L ]

  - processor: []
    format: 'VMOV<c>.F32 <Sd>, #<imm>'
    semantic: []
    mode: A2
    attribute: ['support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,1,*D,1,1,*imm_4H,*Vd,1,0,1,*sz,(0),0,(0),0,*imm_4L ]

##  - processor: []
##    format: 'VMOV<c> <Qd>, <Qm>'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,0,1,1,1,1,0,*D,1,0,*Vm,*Vd,0,0,0,1,*M,*Q,*M,1,*Vm ]

##  - processor: []
##    format: 'VMOV<c> <Dd>, <Dm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,0,0,1,0,0,*D,1,0,*Vm,*Vd,0,0,0,1,*M,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VMOV<c>.F64 <Dd>, <Dm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,*D,1,1,0,0,0,0,*Vd,1,0,1,*sz,0,1,*M,0,*Vm ]

  - processor: []
    format: 'VMOV<c>.F32 <Sd>, <Sm>'
    semantic: []
    mode: A2
    attribute: ['support_it_block', 'support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,1,*D,1,1,0,0,0,0,*Vd,1,0,1,*sz,0,1,*M,0,*Vm ]

  - processor: []
    format: 'VMOV<c>.<size> <Dd[x]>, <Rt>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,0,*opc1_2,0,*Vd,*Rt_4,1,0,1,1,*D,*opc2_2,1,(0),(0),(0),(0) ]

  - processor: []
    format: 'VMOV<c>.<size> <Dd[x]>, <Rt>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,1,0,0,*opc1_2,0,*Vd,*Rt_4,1,0,1,1,*D,*opc2_2,1,(0),(0),(0),(0) ]

  - processor: []
    format: 'VMOV<c>.<dt> <Rt>, <Dn[x]>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,*U,*opc1_2,1,*Vn,*Rt_4,1,0,1,1,*N,*opc2_2,1,(0),(0),(0),(0) ]

  - processor: []
    format: 'VMOV<c>.<dt> <Rt>, <Dn[x]>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,1,0,*U,*opc1_2,1,*Vn,*Rt_4,1,0,1,1,*N,*opc2_2,1,(0),(0),(0),(0) ]

  - processor: []
    format: 'VMOV<c> <Sn>, <Rt>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,0,0,0,*op_1,*Vn,*Rt_4,1,0,1,0,*N,(0),(0),1,(0),(0),(0),(0) ]

  - processor: []
    format: 'VMOV<c> <Rt>, <Sn>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ *cond,1,1,1,0,0,0,0,*op_1,*Vn,*Rt_4,1,0,1,0,*N,(0),(0),1,(0),(0),(0),(0) ]

  - processor: []
    format: 'VMOV<c> <Sm>, <Sm1>, <Rt>, <Rt2>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,0,0,1,0,*op_1,*Rt2_4,*Rt_4,1,0,1,0,0,0,*M,1,*Vm ]

  - processor: []
    format: 'VMOV<c> <Rt>, <Rt2>, <Sm>, <Sm1>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ *cond,1,1,0,0,0,1,0,*op_1,*Rt2_4,*Rt_4,1,0,1,0,0,0,*M,1,*Vm ]

  - processor: []
    format: 'VMOV<c> <Dm>, <Rt>, <Rt2>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,0,0,1,0,*op_1,*Rt2_4,*Rt_4,1,0,1,1,0,0,*M,1,*Vm ]

  - processor: []
    format: 'VMOV<c> <Rt>, <Rt2>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ *cond,1,1,0,0,0,1,0,*op_1,*Rt2_4,*Rt_4,1,0,1,1,0,0,*M,1,*Vm ]

  - processor: []
    format: 'VMOVL<c>.<dt> <Qd>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*imm_3,0,0,0,*Vd,1,0,1,0,0,0,*M,1,*Vm ]

  - processor: []
    format: 'VMOVL<c>.<dt> <Qd>, <Dm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*imm_3,0,0,0,*Vd,1,0,1,0,0,0,*M,1,*Vm ]

  - processor: []
    format: 'VMOVN<c>.<dt> <Dd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,1,0,0,0,*M,0,*Vm ]

  - processor: []
    format: 'VMOVN<c>.<dt> <Dd>, <Qm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,1,0,0,0,*M,0,*Vm ]

  - processor: []
    format: 'VMRS<c> <Rt>, FPSCR'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,1,1,1,0,0,0,1,*Rt_4,1,0,1,0,0,(0),(0),1,(0),(0),(0),(0) ]

  - processor: []
    format: 'VMRS<c> <Rt>, FPSCR'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,1,0,1,1,1,1,0,0,0,1,*Rt_4,1,0,1,0,0,(0),(0),1,(0),(0),(0),(0) ]

  - processor: []
    format: 'VMSR<c> FPSCR, <Rt>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,1,1,0,0,0,0,1,*Rt_4,1,0,1,0,0,(0),(0),1,(0),(0),(0),(0) ]

  - processor: []
    format: 'VMSR<c> FPSCR, <Rt>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,1,0,1,1,1,0,0,0,0,1,*Rt_4,1,0,1,0,0,(0),(0),1,(0),(0),(0),(0) ]

  - processor: []
    format: 'VMUL<c>.<dt> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*op_1,1,1,1,1,0,*D,*size,*Vn,*Vd,1,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VMUL<c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*op_1,0,*D,*size,*Vn,*Vd,1,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VMULL<c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*size,*Vn,*Vd,1,1,*op_1,0,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VMULL<c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*size,*Vn,*Vd,1,1,*op_1,0,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VMUL<c>.F32 <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,0,*D,0,*sz,*Vn,*Vd,1,1,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VMUL<c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,0,*D,0,*sz,*Vn,*Vd,1,1,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VMUL<c>.F64 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,0,*D,1,0,*Vn,*Vd,1,0,1,*sz,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VMUL<c>.F32 <Sd>, <Sn>, <Sm>'
    semantic: []
    mode: A2
    attribute: ['support_it_block', 'support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,0,*D,1,0,*Vn,*Vd,1,0,1,*sz,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VMUL<c>.<dt> <Qd>, <Qn>, <Dm[x]>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*Q,1,1,1,1,1,*D,*size,*Vn,*Vd,1,0,0,*F,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VMUL<c>.<dt> <Dd>, <Dn>, <Dm[x]>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*Q,1,*D,*size,*Vn,*Vd,1,0,0,*F,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VMULL<c>.<dt> <Qd>, <Dn>, <Dm[x]>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*size,*Vn,*Vd,1,0,1,0,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VMULL<c>.<dt> <Qd>, <Dn>, <Dm[x]>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*size,*Vn,*Vd,1,0,1,0,*N,1,*M,0,*Vm ]

##  - processor: []
##    format: 'VMVN<c>.<dt> <Qd>, #<imm>'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,*imm_1,1,1,1,1,1,*D,0,0,0,*imm_3,*Vd,*cmode,0,*Q,1,1,*imm_4 ]

##  - processor: []
##    format: 'VMVN<c>.<dt> <Dd>, #<imm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,0,0,1,*imm_1,1,*D,0,0,0,*imm_3,*Vd,*cmode,0,*Q,1,1,*imm_4 ]

  - processor: []
    format: 'VMVN<c> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,0,1,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VMVN<c> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,0,1,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VNEG<c>.<dt> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,1,1,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VNEG<c>.<dt> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,1,*Vd,0,*F,1,1,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VNEG<c>.F64 <Dd>, <Dm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,*D,1,1,0,0,0,1,*Vd,1,0,1,*sz,0,1,*M,0,*Vm ]

  - processor: []
    format: 'VNEG<c>.F32 <Sd>, <Sm>'
    semantic: []
    mode: A2
    attribute: ['support_it_block', 'support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,1,*D,1,1,0,0,0,1,*Vd,1,0,1,*sz,0,1,*M,0,*Vm ]

  - processor: []
    format: 'VNMLA<c>.F64 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,0,*D,0,1,*Vn,*Vd,1,0,1,*sz,*N,*op_1,*M,0,*Vm ]

  - processor: []
    format: 'VNMLS<c>.F32 <Sd>, <Sn>, <Sm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block', 'support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,0,*D,0,1,*Vn,*Vd,1,0,1,*sz,*N,*op_1,*M,0,*Vm ]

  - processor: []
    format: 'VNMUL<c>.F64 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,0,*D,1,0,*Vn,*Vd,1,0,1,*sz,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VNMUL<c>.F32 <Sd>, <Sn>, <Sm>'
    semantic: []
    mode: A2
    attribute: ['support_it_block', 'support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,0,*D,1,0,*Vn,*Vd,1,0,1,*sz,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VORN<c> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,1,1,*Vn,*Vd,0,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VORN<c> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,1,1,*Vn,*Vd,0,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VORR<c>.<dt> <Qd>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*imm_1,1,1,1,1,1,*D,0,0,0,*imm_3,*Vd,*cmode,0,*Q,0,1,*imm_4 ]

  - processor: []
    format: 'VORR<c>.<dt> <Dd>, #<imm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*imm_1,1,*D,0,0,0,*imm_3,*Vd,*cmode,0,*Q,0,1,*imm_4 ]

  - processor: []
    format: 'VORR<c> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,1,0,*Vn,*Vd,0,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VORR<c> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,1,0,*Vn,*Vd,0,0,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VPADAL<c>.<dt> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,1,0,*op_1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VPADAL<c>.<dt> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,1,0,*op_1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VPADD<c>.<dt>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,*size,*Vn,*Vd,1,0,1,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VPADD<c>.<dt>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,*size,*Vn,*Vd,1,0,1,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VPADD<c>.F32'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,0,*D,0,*sz,*Vn,*Vd,1,1,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VPADD<c>.F32'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,0,*D,0,*sz,*Vn,*Vd,1,1,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VPADDL<c>.<dt> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,0,*Vd,0,0,1,0,*op_1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VPADDL<c>.<dt> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,0,*Vd,0,0,1,0,*op_1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VP<op><c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,1,0,1,0,*N,*Q,*M,*op_1,*Vm ]

  - processor: []
    format: 'VP<op><c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,1,0,1,0,*N,*Q,*M,*op_1,*Vm ]

  - processor: []
    format: 'VP<op><c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,0,*D,*op_1,*sz,*Vn,*Vd,1,1,1,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VP<op><c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,0,*D,*op_1,*sz,*Vn,*Vd,1,1,1,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VPOP <list>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,0,1,*D,1,1,1,1,0,1,*Vd,1,0,1,1,*imm_8 ]

  - processor: []
    format: 'VPOP <list>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,0,0,1,*D,1,1,1,1,0,1,*Vd,1,0,1,1,*imm_8 ]

  - processor: []
    format: 'VPOP <list>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,0,1,*D,1,1,1,1,0,1,*Vd,1,0,1,0,*imm_8 ]

  - processor: []
    format: 'FLDMX'
    semantic: []
    mode: A2
    attribute: ['support_it_block']
    encoding: [ *cond,1,1,0,0,1,*D,1,1,1,1,0,1,*Vd,1,0,1,0,*imm_8 ]

  - processor: []
    format: 'VPUSH<c> <list>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,1,0,*D,1,0,1,1,0,1,*Vd,1,0,1,1,*imm_8 ]

  - processor: []
    format: 'VPUSH<c> <list>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,0,1,0,*D,1,0,1,1,0,1,*Vd,1,0,1,1,*imm_8 ]

  - processor: []
    format: 'VPUSH<c> <list>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,1,0,*D,1,0,1,1,0,1,*Vd,1,0,1,0,*imm_8 ]

  - processor: []
    format: 'FSTMX'
    semantic: []
    mode: A2
    attribute: ['support_it_block']
    encoding: [ *cond,1,1,0,1,0,*D,1,0,1,1,0,1,*Vd,1,0,1,0,*imm_8 ]

  - processor: []
    format: 'VQABS<c>.<dt> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,1,1,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VQABS<c>.<dt> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,1,1,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VQADD<c>.<dt> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,0,0,0,0,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VQADD<c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,0,0,0,0,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VQD<op><c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,1,*D,*size,*Vn,*Vd,1,0,*op_1,1,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VQD<op><c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,0,1,*D,*size,*Vn,*Vd,1,0,*op_1,1,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VQD<op><c>.<dt> <Qd>, <Dn>, <Dm[x]>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,1,*D,*size,*Vn,*Vd,0,*op_1,1,1,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VQD<op><c>.<dt> <Qd>, <Dn>, <Dm[x]>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,0,1,*D,*size,*Vn,*Vd,0,*op_1,1,1,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VQDMULH<c>.<dt> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,*size,*Vn,*Vd,1,0,1,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VQDMULH<c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,*size,*Vn,*Vd,1,0,1,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VQDMULH<c>.<dt> <Qd>, <Qn>, <Dm[x]>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*Q,1,1,1,1,1,*D,*size,*Vn,*Vd,1,1,0,0,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VQDMULH<c>.<dt> <Dd>, <Dn>, <Dm[x]>'
    semantic: []
    mode: A2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*Q,1,*D,*size,*Vn,*Vd,1,1,0,0,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VQDMULL<c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,1,*D,*size,*Vn,*Vd,1,1,0,1,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VQDMULL<c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,0,1,*D,*size,*Vn,*Vd,1,1,0,1,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VQDMULL<c>.<dt> <Qd>, <Dn>, <Dm[x]>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,1,*D,*size,*Vn,*Vd,1,0,1,1,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VQDMULL<c>.<dt> <Qd>, <Dn>, <Dm[x]>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,0,1,*D,*size,*Vn,*Vd,1,0,1,1,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VQMOV{U}N<c>.<type><size> <Dd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,1,0,*op2_2,*M,0,*Vm ]

  - processor: []
    format: 'VQMOV{U}N<c>.<type><size> <Dd>, <Qm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,1,0,*op2_2,*M,0,*Vm ]

  - processor: []
    format: 'VQNEG<c>.<dt> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,1,1,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VQNEG<c>.<dt> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,0,*Vd,0,1,1,1,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VQRDMULH<c>.<dt> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,0,*D,*size,*Vn,*Vd,1,0,1,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VQRDMULH<c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,0,*D,*size,*Vn,*Vd,1,0,1,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VQRDMULH<c>.<dt> <Qd>, <Qn>, <Dm[x]>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*Q,1,1,1,1,1,*D,*size,*Vn,*Vd,1,1,0,1,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VQRDMULH<c>.<dt> <Dd>, <Dn>, <Dm[x]>'
    semantic: []
    mode: A2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*Q,1,*D,*size,*Vn,*Vd,1,1,0,1,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VQRSHL<c>.<type><size> <Qd>, <Qm>, <Qn>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,0,1,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VQRSHL<c>.<type_4><size> <Dd>, <Dm>, <Dn>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,0,1,0,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VQRSHR{U}N<c>.<type_4><size> <Dd>, <Qm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*imm_6,*Vd,1,0,0,*op_1,0,1,*M,1,*Vm ]

  - processor: []
    format: 'VQRSHR{U}N<c>.<type_4><size> <Dd>, <Qm>, #<imm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*imm_6,*Vd,1,0,0,*op_1,0,1,*M,1,*Vm ]

  - processor: []
    format: 'VQSHL<c>.<type_4><size> <Qd>, <Qm>, <Qn>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,0,1,0,0,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VQSHL<c>.<type_4><size> <Dd>, <Dm>, <Dn>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,0,1,0,0,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VQSHL{U}<c>.<type_4><size> <Qd>, <Qm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*imm_6,*Vd,0,1,1,*op_1,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VQSHL{U}<c>.<type_4><size> <Dd>, <Dm>, #<imm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*imm_6,*Vd,0,1,1,*op_1,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VQSHR{U}N<c>.<type_4><size> <Dd>, <Qm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*imm_6,*Vd,1,0,0,*op_1,0,0,*M,1,*Vm ]

  - processor: []
    format: 'VQSHR{U}N<c>.<type_4><size> <Dd>, <Qm>, #<imm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*imm_6,*Vd,1,0,0,*op_1,0,0,*M,1,*Vm ]

  - processor: []
    format: 'VQSUB<c>.<type_4><size> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,0,0,1,0,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VQSUB<c>.<type_4><size> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,0,0,1,0,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VRADDHN<c>.<dt> <Dd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,*size,*Vn,*Vd,0,1,0,0,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VRADDHN<c>.<dt> <Dd>, <Qn>, <Qm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,*size,*Vn,*Vd,0,1,0,0,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VRECPE<c>.<dt> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,1,1,*Vd,0,1,0,*F,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VRECPE<c>.<dt> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,1,1,*Vd,0,1,0,*F,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VRECPS<c>.F32 <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,0,*sz,*Vn,*Vd,1,1,1,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VRECPS<c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,0,*sz,*Vn,*Vd,1,1,1,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VREV<n><c>.<size> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,0,0,*Vd,0,0,0,*op2_2,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VREV<n><c>.<size> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,0,0,*Vd,0,0,0,*op2_2,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VRHADD<c> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,0,0,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VRHADD<c> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,0,0,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VRSHL<c>.<type_4><size> <Qd>, <Qm>, <Qn>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,0,1,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VRSHL<c>.<type_4><size> <Dd>, <Dm>, <Dn>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,0,1,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VRSHR<c>.<type_4><size> <Qd>, <Qm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*imm_6,*Vd,0,0,1,0,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VRSHR<c>.<type_4><size> <Dd>, <Dm>, #<imm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*imm_6,*Vd,0,0,1,0,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VRSHRN<c>.I<size> <Dd>, <Qm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,1,*D,*imm_6,*Vd,1,0,0,0,0,1,*M,1,*Vm ]

  - processor: []
    format: 'VRSHRN<c>.I<size> <Dd>, <Qm>, #<imm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,0,1,*D,*imm_6,*Vd,1,0,0,0,0,1,*M,1,*Vm ]

  - processor: []
    format: 'VRSQRTE<c>.<dt> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,1,1,*Vd,0,1,0,*F,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VRSQRTE<c>.<dt> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,1,1,*Vd,0,1,0,*F,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VRSQRTS<c>.F32 <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,1,*sz,*Vn,*Vd,1,1,1,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VRSQRTS<c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,1,*sz,*Vn,*Vd,1,1,1,1,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VRSRA<c>.<type_4><size> <Qd>, <Qm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*imm_6,*Vd,0,0,1,1,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VRSRA<c>.<type_4><size> <Dd>, <Dm>, #<imm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*imm_6,*Vd,0,0,1,1,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VRSUBHN<c>.<dt> <Dd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,*size,*Vn,*Vd,0,1,1,0,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VRSUBHN<c>.<dt> <Dd>, <Qn>, <Qm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,*size,*Vn,*Vd,0,1,1,0,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VSHL<c>.I<size> <Qd>, <Qm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,1,*D,*imm_6,*Vd,0,1,0,1,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VSHL<c>.I<size> <Dd>, <Dm>, #<imm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,1,*D,*imm_6,*Vd,0,1,0,1,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VSHL<c>.I<size> <Qd>, <Qm>, <Qn>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,0,*D,*size,*Vn,*Vd,0,1,0,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VSHL<c>.I<size> <Dd>, <Dm>, <Dn>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,0,*D,*size,*Vn,*Vd,0,1,0,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VSHLL<c>.<type_4><size> <Qd>, <Dm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*imm_6,*Vd,1,0,1,0,0,0,*M,1,*Vm ]

  - processor: []
    format: 'VSHLL<c>.<type_4><size> <Qd>, <Dm>, #<imm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*imm_6,*Vd,1,0,1,0,0,0,*M,1,*Vm ]

  - processor: []
    format: 'VSHLL<c>.<type_4><size> <Qd>, <Dm>, #<imm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,1,1,0,0,*M,0,*Vm ]

  - processor: []
    format: 'VSHLL<c>.<type_4><size> <Qd>, <Dm>, #<imm>'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,1,1,0,0,*M,0,*Vm ]

  - processor: []
    format: 'VSHR<c>.<type_4><size> <Qd>, <Qm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*imm_6,*Vd,0,0,0,0,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VSHR<c>.<type_4><size> <Dd>, <Dm>, #<imm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*imm_6,*Vd,0,0,0,0,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VSHRN<c>.I<size> <Dd>, <Qm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,1,*D,*imm_6,*Vd,1,0,0,0,0,0,*M,1,*Vm ]

  - processor: []
    format: 'VSHRN<c>.I<size> <Dd>, <Qm>, #<imm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,0,1,*D,*imm_6,*Vd,1,0,0,0,0,0,*M,1,*Vm ]

  - processor: []
    format: 'VSLI<c>.<size> <Qd>, <Qm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,*imm_6,*Vd,0,1,0,1,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VSLI<c>.<size> <Dd>, <Dm>, #<imm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,*imm_6,*Vd,0,1,0,1,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VSQRT<c>.F64 <Dd>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,1,*D,1,1,0,0,0,1,*Vd,1,0,1,*sz,1,1,*M,0,*Vm ]

  - processor: []
    format: 'VSQRT<c>.F32 <Sd>, <Sm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block', 'support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,1,*D,1,1,0,0,0,1,*Vd,1,0,1,*sz,1,1,*M,0,*Vm ]

  - processor: []
    format: 'VSRA<c>.<type_4><size> <Qd>, <Qm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*imm_6,*Vd,0,0,0,1,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VSRA<c>.<type_4><size> <Dd>, <Dm>, #<imm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*imm_6,*Vd,0,0,0,1,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VSRI<c>.<size> <Qd>, <Qm>, #<imm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,*imm_6,*Vd,0,1,0,0,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VSRI<c>.<size> <Dd>, <Dm>, #<imm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,*imm_6,*Vd,0,1,0,0,*L,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VST1<c>.<size> <list>, [<Rn>{@<align>}]{!}'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,0,0,1,0,*D,0,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]

  - processor: []
    format: 'VST1<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block', 'support_it_block']
    encoding: [ 1,1,1,1,0,1,0,0,0,*D,0,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]

  - processor: []
    format: 'VST1<c>.<size> <list>, [<Rn>{@<align>}]{!}'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,0,0,1,1,*D,0,0,*Rn_4,*Vd,*size,0,0,*index_align,*Rm_4 ]

  - processor: []
    format: 'VST1<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,1,0,0,1,*D,0,0,*Rn_4,*Vd,*size,0,0,*index_align,*Rm_4 ]

##  - processor: []
##    format: 'VST2<c>.<size> <list>, [<Rn>{@<align>}]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,0,*D,0,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]
##
##  - processor: []
##    format: 'VST2<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block', 'support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,0,*D,0,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]
##
##  - processor: []
##    format: 'VST2<c>.<size> <list>, [<Rn>{@<align>}]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,1,*D,0,0,*Rn_4,*Vd,*size,0,1,*index_align,*Rm_4 ]
##
##  - processor: []
##    format: 'VST2<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,1,*D,0,0,*Rn_4,*Vd,*size,0,1,*index_align,*Rm_4 ]
##
##  - processor: []
##    format: 'VST3<c>.<size> <list>, [<Rn>{@<align>}]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,0,*D,0,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]
##
##  - processor: []
##    format: 'VST3<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block', 'support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,0,*D,0,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]
##
##  - processor: []
##    format: 'VST3<c>.<size> <list>, [<Rn>]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,1,*D,0,0,*Rn_4,*Vd,*size,1,0,*index_align,*Rm_4 ]
##
##  - processor: []
##    format: 'VST3<c>.<size> <list>, [<Rn>], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,1,*D,0,0,*Rn_4,*Vd,*size,1,0,*index_align,*Rm_4 ]
##
##  - processor: []
##    format: 'VST4<c>.<size> <list>, [<Rn>{@<align>}]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,0,*D,0,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]
##
##  - processor: []
##    format: 'VST4<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block', 'support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,0,*D,0,0,*Rn_4,*Vd,*type_4,*size,*align,*Rm_4 ]
##
##  - processor: []
##    format: 'VST4<c>.<size> <list>, [<Rn>{@<align>}]{!}'
##    semantic: []
##    mode: T1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,1,0,0,1,1,*D,0,0,*Rn_4,*Vd,*size,1,1,*index_align,*Rm_4 ]
##
##  - processor: []
##    format: 'VST4<c>.<size> <list>, [<Rn>{@<align>}], <Rm>'
##    semantic: []
##    mode: A1
##    attribute: ['support_it_block']
##    encoding: [ 1,1,1,1,0,1,0,0,1,*D,0,0,*Rn_4,*Vd,*size,1,1,*index_align,*Rm_4 ]

  - processor: []
    format: 'VSTM{mode}<c> <Rn>{!}, <list>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,*P,*U,*D,*W,0,*Rn_4,*Vd,1,0,1,1,*imm_8 ]

  - processor: []
    format: 'VSTM{mode}<c> <Rn>{!}, <list>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,0,*P,*U,*D,*W,0,*Rn_4,*Vd,1,0,1,1,*imm_8 ]

  - processor: []
    format: 'VSTM{mode}<c> <Rn>{!}, <list>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,*P,*U,*D,*W,0,*Rn_4,*Vd,1,0,1,0,*imm_8 ]

  - processor: []
    format: 'FSTMX'
    semantic: []
    mode: A2
    attribute: ['support_it_block']
    encoding: [ *cond,1,1,0,*P,*U,*D,*W,0,*Rn_4,*Vd,1,0,1,0,*imm_8 ]

  - processor: []
    format: 'VSTR<c> <Dd>, [<Rn>{,#+/-<imm>}]'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,1,*U,*D,0,0,*Rn_4,*Vd,1,0,1,1,*imm_8 ]

  - processor: []
    format: 'VSTR<c> <Dd>, [<Rn>{,#+/-<imm>}]'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,1,1,0,1,*U,*D,0,0,*Rn_4,*Vd,1,0,1,1,*imm_8 ]

  - processor: []
    format: 'VSTR<c> <Sd>, [<Rn>{,#+/-<imm>}]'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,0,1,*U,*D,0,0,*Rn_4,*Vd,1,0,1,0,*imm_8 ]

  - processor: []
    format: 'VSTR<c> <Sd>, [<Rn>{,#+/-<imm>}]'
    semantic: []
    mode: A2
    attribute: []
    encoding: [ *cond,1,1,0,1,*U,*D,0,0,*Rn_4,*Vd,1,0,1,0,*imm_8 ]

  - processor: []
    format: 'VSUB<c>.<dt> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,0,*D,*size,*Vn,*Vd,1,0,0,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VSUB<c>.<dt> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,0,*D,*size,*Vn,*Vd,1,0,0,0,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VSUB<c>.F32 <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,1,*sz,*Vn,*Vd,1,1,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VSUB<c>.F32 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,1,*sz,*Vn,*Vd,1,1,0,1,*N,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VSUB<c>.F64 <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: T2
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,0,0,*D,1,1,*Vn,*Vd,1,0,1,*sz,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VSUB<c>.F32 <Sd>, <Sn>, <Sm>'
    semantic: []
    mode: A2
    attribute: ['support_it_block', 'support_it_block', 'support_it_block']
    encoding: [ *cond,1,1,1,0,0,*D,1,1,*Vn,*Vd,1,0,1,*sz,*N,1,*M,0,*Vm ]

  - processor: []
    format: 'VSUBHN<c>.<dt> <Dd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,1,*D,*size,*Vn,*Vd,0,1,1,0,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VSUBHN<c>.<dt> <Dd>, <Qn>, <Qm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,0,1,*D,*size,*Vn,*Vd,0,1,1,0,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VSUBL<c>.<dt> <Qd>, <Dn>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,*U,1,1,1,1,1,*D,*size,*Vn,*Vd,0,0,1,*op_1,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VSUBW<c>.<dt> {<Qd>,} <Qn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,*U,1,*D,*size,*Vn,*Vd,0,0,1,*op_1,*N,0,*M,0,*Vm ]

  - processor: []
    format: 'VSWP<c> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,0,0,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VSWP<c> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,0,0,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'V<op><c>.8 <Dd>, <list>, <Dm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*Vn,*Vd,1,0,*len,*N,*op_1,*M,0,*Vm ]

  - processor: []
    format: 'V<op><c>.8 <Dd>, <list>, <Dm>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*Vn,*Vd,1,0,*len,*N,*op_1,*M,0,*Vm ]

  - processor: []
    format: 'VTRN<c>.<size> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,0,0,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VTRN<c>.<size> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,0,0,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VTST<c>.<size> <Qd>, <Qn>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,0,1,1,1,1,0,*D,*size,*Vn,*Vd,1,0,0,0,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VTST<c>.<size> <Dd>, <Dn>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,0,0,*D,*size,*Vn,*Vd,1,0,0,0,*N,*Q,*M,1,*Vm ]

  - processor: []
    format: 'VUZP<c>.<size> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,0,1,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VUZP<c>.<size> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,0,1,0,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VZIP<c>.<size> <Qd>, <Qm>'
    semantic: []
    mode: T1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,1,1,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,0,1,1,*Q,*M,0,*Vm ]

  - processor: []
    format: 'VZIP<c>.<size> <Dd>, <Dm>'
    semantic: []
    mode: A1
    attribute: ['support_it_block']
    encoding: [ 1,1,1,1,0,0,1,1,1,*D,1,1,*size,1,0,*Vd,0,0,0,1,1,*Q,*M,0,*Vm ]

  - processor: ['ARMv7', 'ARMv6T2)']
    format: 'WFE<c>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0 ]

  - processor: ['ARMv7', 'ARMv6T2)']
    format: 'WFE<c>.W'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,0,1,0,(1),(1),(1),(1),1,0,(0),0,(0),0,0,0,0,0,0,0,0,0,1,0 ]

  - processor: ['ARMv6K', 'ARMv7', 'ARMv6T2)']
    format: 'WFE<c>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,0,0,1,0,0,0,0,0,(1),(1),(1),(1),(0),(0),(0),(0),0,0,0,0,0,0,1,0 ]

  - processor: ['ARMv7', 'ARMv6T2)']
    format: 'WFI<c>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,1,1,1,1,0,0,1,1,0,0,0,0 ]

  - processor: ['ARMv7', 'ARMv6T2)']
    format: 'WFI<c>.W'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,0,1,0,(1),(1),(1),(1),1,0,(0),0,(0),0,0,0,0,0,0,0,0,0,1,1 ]

  - processor: ['ARMv6K', 'ARMv7', 'ARMv6T2)']
    format: 'WFI<c>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,0,0,1,0,0,0,0,0,(1),(1),(1),(1),(0),(0),(0),(0),0,0,0,0,0,0,1,1 ]

  - processor: ['ARMv7', 'ARMv6T2)']
    format: 'YIELD<c>'
    semantic: []
    mode: T1
    attribute: []
    encoding: [ 1,0,1,1,1,1,1,1,0,0,0,1,0,0,0,0 ]

  - processor: ['ARMv7', 'ARMv6T2)']
    format: 'YIELD<c>.W'
    semantic: []
    mode: T2
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,0,1,0,(1),(1),(1),(1),1,0,(0),0,(0),0,0,0,0,0,0,0,0,0,0,1 ]

  - processor: ['ARMv6K', 'ARMv7', 'ARMv6T2)']
    format: 'YIELD<c>'
    semantic: []
    mode: A1
    attribute: []
    encoding: [ *cond,0,0,1,1,0,0,1,0,0,0,0,0,(1),(1),(1),(1),(0),(0),(0),(0),0,0,0,0,0,0,0,1 ]

## Since this point, the following instructions seem to be ThumbEE specific but are not in En mode (Tn is used instead), we force the En instead of Tn.

# It'd be easier to handle ENTERX/LEAVEX as 2 different instructions
  - processor: []
    format: 'LEAVEX'
    semantic: []
    mode: E1 # HACK
    attribute: []
    encoding: [ 1,1,1,1,0,0,1,1,1,0,1,1,(1),(1),(1),(1),1,0,(0),0,(1),(1),(1),(1),0,0,0,*J,(1),(1),(1),(1) ]

  - processor: []
    format: 'LDR<c> <Rt>, [<Rn>, <Rm>, LSL #2]'
    semantic: []
    mode: E1 # HACK
    attribute: []
    encoding: [ 0,1,0,1,1,0,0,*Rm_3,*Rn_3,*Rt_3 ]

  - processor: []
    format: 'LDRH<c> <Rt>, [<Rn>, <Rm>, LSL #1]'
    semantic: []
    mode: E1 # HACK
    attribute: []
    encoding: [ 0,1,0,1,1,0,1,*Rm_3,*Rn_3,*Rt_3 ]

  - processor: []
    format: 'LDRSH<c> <Rt>, [<Rn>, <Rm>, LSL #1]'
    semantic: []
    mode: E1 # HACK
    attribute: []
    encoding: [ 0,1,0,1,1,1,1,*Rm_3,*Rn_3,*Rt_3 ]

  - processor: []
    format: 'STR<c> <Rt>, [<Rn>, <Rm>, LSL #2]'
    semantic: []
    mode: E1 # HACK
    attribute: []
    encoding: [ 0,1,0,1,0,0,0,*Rm_3,*Rn_3,*Rt_3 ]

  - processor: []
    format: 'STRH<c> <Rt>, [<Rn>, <Rm>, LSL #1]'
    semantic: []
    mode: E1 # HACK
    attribute: []
    encoding: [ 0,1,0,1,0,0,1,*Rm_3,*Rn_3,*Rt_3 ]

  - processor: []
    format: 'CHKA<c> <Rn>, <Rm>'
    semantic: []
    mode: E1
    attribute: []
    encoding: [ 1,1,0,0,1,0,1,0,*N,*Rm_4,*Rn_3 ]

  - processor: []
    format: 'HB{L}<c> #<handler8>'
    semantic: []
    mode: E1
    attribute: []
    encoding: [ 1,1,0,0,0,0,1,*L,*handler8 ]

  - processor: []
    format: 'HBLP<c> #<imm>, #<handler5>'
    semantic: []
    mode: E1
    attribute: []
    encoding: [ 1,1,0,0,0,1,*imm_5,*handler5 ]

  - processor: []
    format: 'HBP<c> #<imm>, #<handler5>'
    semantic: []
    mode: E1
    attribute: []
    encoding: [ 1,1,0,0,0,0,0,0,*imm_3,*handler5 ]

  - processor: []
    format: 'LDR<c> <Rt>, [R9{,#<imm>}]'
    semantic: []
    mode: E1
    attribute: []
    encoding: [ 1,1,0,0,1,1,0,*imm_6,*Rt_3 ]

  - processor: []
    format: 'LDR<c> <Rt>, [R10{,#<imm>}]'
    semantic: []
    mode: E2
    attribute: []
    encoding: [ 1,1,0,0,1,0,1,1,*imm_5,*Rt_3 ]

  - processor: []
    format: 'LDR<c> <Rt>, [<Rn>{,#-<imm>}]'
    semantic: []
    mode: E3
    attribute: []
    encoding: [ 1,1,0,0,1,0,0,*imm_3,*Rn_3,*Rt_3 ]

  - processor: []
    format: 'STR<c> <Rt>, [R9, #<imm>]'
    semantic: []
    mode: E1
    attribute: []
    encoding: [ 1,1,0,0,1,1,1,*imm_6,*Rt_3 ]

#End of ThumbEE instruction

#Start of ARMv8 instruction (a.k.a. AArch64)

  - processor: ['ARMv8']
    format: 'abs <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),0,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'abs <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),0,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'adc <Rd> <Rn> <Rm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,1,1,0,1,0,0,0,0,m,m,m,m,m,(0),(0),(0),(0),0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'adcs <Rd> <Rn> <Rm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,1,1,0,1,0,0,0,0,m,m,m,m,m,(0),(0),(0),(0),0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'addhn2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'addhn <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'addp <Sd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,1,(0),(0),(0),1,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'addp <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'add <Rd> <Rn> <Rm_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,0,1,1,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'add <Rd_SP> <Rn_SP> <AIMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,(0),0,0,0,1,S,S,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'add <Rd_SP> <Rn_SP> <Rm_EXT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,0,1,1,0,(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'add <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),0,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'adds <Rd> <Rn> <Rm_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,0,1,1,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'adds <Rd> <Rn_SP> <AIMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,(0),0,0,0,1,S,S,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'adds <Rd> <Rn_SP> <Rm_EXT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,0,1,1,0,(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'add <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'addv <Fd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,(0),(0),1,1,(0),(0),(0),1,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'adrp <Rd> <ADDR_ADRP>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,i,i,(0),0,0,0,0,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'adr <Rd> <ADDR_PCREL21>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,i,i,(0),0,0,0,0,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'aesd <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,(0),(0),1,(0),1,(0),(0),(0),0,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'aese <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,(0),(0),1,(0),1,(0),(0),0,0,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'aesimc <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,(0),(0),1,(0),1,(0),(0),0,0,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'aesmc <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,(0),(0),1,(0),1,(0),(0),0,0,1,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'and <Rd> <Rn> <Rm_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,0,1,0,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'and <Rd_SP> <Rn> <LIMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,(0),0,0,1,0,0,N,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ands <Rd> <Rn> <LIMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,(0),0,0,1,0,0,N,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ands <Rd> <Rn> <Rm_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,0,1,0,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'and <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,0,0,1,m,m,m,m,m,0,0,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'asrv <Rd> <Rn> <Rm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,0,1,(0),0,m,m,m,m,m,(0),(0),1,(0),1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'b <ADDR_PCREL26>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,0,(0),0,1,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i ]

  - processor: ['ARMv8']
    format: 'b.c <ADDR_PCREL19>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,0,(0),0,1,0,0,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'bfm <Rd> <Rn> <IMMR> <IMMS>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,(0),0,0,1,1,0,(0),i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'bic <Rd> <Rn> <Rm_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,(0),1,0,1,0,(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'bics <Rd> <Rn> <Rm_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,(0),1,0,1,0,(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'bic <Vd> <SIMD_IMM_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,(0),(0),1,(0),1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'bic <Vd> <SIMD_IMM_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),1,0,1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'bic <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,0,1,1,m,m,m,m,m,0,0,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'bif <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,1,1,1,m,m,m,m,m,0,0,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'bit <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,1,0,1,m,m,m,m,m,0,0,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'bl <ADDR_PCREL26>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,0,0,(0),0,1,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i ]

  - processor: ['ARMv8']
    format: 'blr <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,1,0,0,(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'brk <EXCEPTION>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,1,0,(0),0,1,0,0,(0),(0),1,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,(0),(0),(0),0,0 ]

  - processor: ['ARMv8']
    format: 'br <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,1,0,0,0,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'bsl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,0,1,1,m,m,m,m,m,0,0,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cbnz <Rt> <ADDR_PCREL19>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,(0),0,1,0,1,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'cbz <Rt> <ADDR_PCREL19>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,(0),0,1,0,0,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ccmn <Rn> <CCMP_IMM> <NZCV> <COND>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),1,1,0,1,0,0,(0),0,i,i,i,i,i,(0),(0),(0),(0),1,0,n,n,n,n,n,(0),c,c,c,c ]

  - processor: ['ARMv8']
    format: 'ccmn <Rn> <Rm> <NZCV> <COND>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),1,1,0,1,0,0,1,0,m,m,m,m,m,(0),(0),(0),(0),0,0,n,n,n,n,n,(0),c,c,c,c ]

  - processor: ['ARMv8']
    format: 'ccmp <Rn> <CCMP_IMM> <NZCV> <COND>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,0,1,0,0,(0),0,i,i,i,i,i,(0),(0),(0),(0),1,0,n,n,n,n,n,(0),c,c,c,c ]

  - processor: ['ARMv8']
    format: 'ccmp <Rn> <Rm> <NZCV> <COND>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,0,1,0,0,1,0,m,m,m,m,m,(0),(0),(0),(0),0,0,n,n,n,n,n,(0),c,c,c,c ]

  - processor: ['ARMv8']
    format: 'clrex <UIMM4>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,(0),1,(0),(0),(0),0,0,(0),(0),(0),(0),(0),(0),1,m,m,m,m,0,1,0,(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'cls <Rd> <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,0,(0),1,0,(0),(0),(0),(0),(0),(0),(0),(0),1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cls <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,(0),0,(0),(0),0,0,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'clz <Rd> <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,0,1,1,0,(0),(0),(0),(0),(0),(0),(0),(0),1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'clz <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,(0),0,(0),(0),0,0,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmeq <Sd> <Sn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),0,1,0,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmeq <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmeq <Vd> <Vn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),0,1,0,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmeq <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmge <Sd> <Sn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),1,0,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmge <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),0,1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmge <Vd> <Vn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),0,1,0,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmge <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmgt <Sd> <Sn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),1,0,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmgt <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,(0),1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmgt <Vd> <Vn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),0,1,0,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmgt <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmhi <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,(0),1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmhi <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmhs <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),(0),1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmhs <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmle <Sd> <Sn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),0,1,0,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmle <Vd> <Vn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),0,1,0,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmlt <Sd> <Sn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,0,(0),(0),(0),0,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmlt <Vd> <Vn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,(0),(0),1,0,(0),(0),(0),0,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmtst <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cmtst <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'cnt <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,(0),0,(0),(0),(0),0,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'csel <Rd> <Rn> <Rm> <COND>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),1,1,0,1,0,1,0,0,m,m,m,m,m,(0),(0),(0),(0),0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'csinc <Rd> <Rn> <Rm> <COND>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),1,1,0,1,0,(0),0,0,m,m,m,m,m,(0),(0),(0),(0),0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'csinv <Rd> <Rn> <Rm> <COND>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,0,1,0,1,0,0,m,m,m,m,m,(0),(0),(0),(0),0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'csneg <Rd> <Rn> <Rm> <COND>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,0,1,0,(0),0,0,m,m,m,m,m,(0),(0),(0),(0),0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'dcps1 <EXCEPTION>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,1,0,(0),0,1,0,0,(0),(0),1,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,(0),(0),(0),0,1 ]

  - processor: ['ARMv8']
    format: 'dcps2 <EXCEPTION>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,1,0,(0),0,1,0,0,(0),(0),1,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,(0),(0),(0),1,0 ]

  - processor: ['ARMv8']
    format: 'dcps3 <EXCEPTION>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,1,0,(0),0,1,0,0,(0),(0),1,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,(0),(0),(0),1,1 ]

  - processor: ['ARMv8']
    format: 'dmb <BARRIER>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,(0),1,(0),(0),(0),0,0,(0),(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'drps '
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,1,0,1,(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'dsb <BARRIER>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,(0),1,(0),(0),(0),0,0,(0),(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0),0,0,(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'dup <Sd> <En>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,1,1,0,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'dup <Vd> <En>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'dup <Vd> <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'eon <Rd> <Rn> <Rm_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),1,0,1,0,(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'eor <Rd> <Rn> <Rm_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,0,1,0,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'eor <Rd_SP> <Rn> <LIMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,0,1,0,0,N,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'eor <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,0,0,1,m,m,m,m,m,0,0,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'eret '
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,1,0,1,0,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'extr <Rd> <Rn> <Rm> <IMMS>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),(0),0,0,1,1,1,(0),(0),m,m,m,m,m,i,i,i,i,i,i,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ext <Vd> <Vn> <Vm> <IDX>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),i,i,i,i,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fabd <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,m,m,m,m,m,1,(0),0,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fabd <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,1,(0),1,m,m,m,m,m,1,1,0,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fabs <Fd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),0,0,0,1,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fabs <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,(0),1,1,1,0,(0),(0),1,0,(0),(0),(0),0,1,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'facge <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,0,(0),1,m,m,m,m,m,(0),1,1,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'facge <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,0,(0),1,m,m,m,m,m,1,1,1,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'facgt <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,1,(0),1,m,m,m,m,m,(0),1,1,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'facgt <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,1,(0),1,m,m,m,m,m,1,1,1,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fadd <Fd> <Fn> <Fm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'faddp <Sd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),(0),1,1,1,0,(0),(0),1,1,(0),(0),(0),0,1,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'faddp <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,0,(0),1,m,m,m,m,m,1,1,0,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fadd <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,0,(0),1,m,m,m,m,m,1,1,0,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fccmpe <Fn> <Fm> <NZCV> <COND>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),(0),(0),(0),0,1,n,n,n,n,n,1,c,c,c,c ]

  - processor: ['ARMv8']
    format: 'fccmp <Fn> <Fm> <NZCV> <COND>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),(0),(0),(0),0,1,n,n,n,n,n,0,c,c,c,c ]

  - processor: ['ARMv8']
    format: 'fcmeq <Sd> <Sn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,1,1,1,1,0,(0),(0),1,0,(0),(0),(0),0,1,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmeq <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),(0),1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmeq <Vd> <Vn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,0,(0),(0),(0),0,1,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmeq <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,0,(0),1,m,m,m,m,m,1,1,1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmge <Sd> <Sn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,0,(0),(0),(0),0,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmge <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,0,(0),1,m,m,m,m,m,(0),(0),1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmge <Vd> <Vn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,0,(0),(0),(0),0,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmge <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,0,(0),1,m,m,m,m,m,1,1,1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmgt <Sd> <Sn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,1,1,1,1,0,(0),(0),1,0,(0),(0),(0),0,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmgt <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,1,(0),1,m,m,m,m,m,(0),(0),1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmgt <Vd> <Vn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,0,(0),(0),(0),0,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmgt <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,1,(0),1,m,m,m,m,m,1,1,1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmle <Sd> <Sn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,0,(0),(0),(0),0,1,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmle <Vd> <Vn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,0,(0),(0),(0),0,1,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmlt <Sd> <Sn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),1,1,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmlt <Vd> <Vn> <IMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),1,1,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcmpe <Fn> <Fm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,0,0,0,n,n,n,n,n,1,0,(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'fcmpe <Fn> <FPIMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,0,1,0,0,0,n,n,n,n,n,1,1,(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'fcmp <Fn> <Fm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,0,0,0,n,n,n,n,n,0,0,(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'fcmp <Fn> <FPIMM0>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,0,1,0,0,0,n,n,n,n,n,0,1,(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'fcsel <Fd> <Fn> <Fm> <COND>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),(0),(0),(0),1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtas <Rd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),1,0,0,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtas <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,1,1,1,1,0,0,(0),1,(0),(0),(0),(0),1,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtas <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,0,(0),1,(0),(0),(0),(0),1,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtau <Rd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),1,0,1,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtau <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,0,(0),1,(0),(0),(0),(0),1,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtau <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,0,(0),1,(0),(0),(0),(0),1,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvt <Fd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),0,1,(0),(0),1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtl2 <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtl <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtms <Rd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,1,0,0,0,0,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtms <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,1,1,1,1,0,0,(0),1,0,(0),(0),(0),1,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtms <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,0,(0),1,0,(0),(0),(0),1,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtmu <Rd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,1,0,0,0,1,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtmu <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,0,(0),1,0,(0),(0),(0),1,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtmu <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,0,(0),1,0,(0),(0),(0),1,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtn2 <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,1,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtns <Rd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,0,0,0,0,0,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtns <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,1,1,1,1,0,0,(0),1,0,(0),(0),(0),1,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtns <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,0,(0),1,0,(0),(0),(0),1,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtnu <Rd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,0,0,0,0,1,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtnu <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,0,(0),1,0,(0),(0),(0),1,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtnu <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,0,(0),1,0,(0),(0),(0),1,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtn <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,1,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtps <Rd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,0,1,0,0,0,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtps <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,1,1,1,1,0,1,(0),1,0,(0),(0),(0),1,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtps <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,1,(0),1,0,(0),(0),(0),1,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtpu <Rd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,0,1,0,0,1,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtpu <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,1,(0),1,0,(0),(0),(0),1,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtpu <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,1,(0),1,0,(0),(0),(0),1,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtxn2 <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,1,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtxn <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,1,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtxn <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,1,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtzs <Rd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,1,1,0,0,0,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtzs <Rd> <Fn> <FBITS>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),1,1,1,1,0,(0),(0),0,(0),(0),(0),0,0,S,S,S,S,S,S,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtzs <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,1,1,1,1,0,1,(0),1,0,(0),(0),(0),1,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtzs <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),1,(0),1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtzs <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,1,(0),1,0,(0),(0),(0),1,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtzs <Vd> <Vn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtzu <Rd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,1,1,0,0,1,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtzu <Rd> <Fn> <FBITS>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),1,1,1,1,0,(0),(0),0,(0),(0),(0),0,1,S,S,S,S,S,S,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtzu <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,1,(0),1,0,(0),(0),(0),1,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtzu <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtzu <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,1,(0),1,0,(0),(0),(0),1,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fcvtzu <Vd> <Vn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fdiv <Fd> <Fn> <Fm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fdiv <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,0,(0),1,m,m,m,m,m,1,1,1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmadd <Fd> <Fn> <Fm> <Fa>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,1,1,1,1,1,(0),(0),0,m,m,m,m,m,0,a,a,a,a,a,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmax <Fd> <Fn> <Fm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmaxnm <Fd> <Fn> <Fm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmaxnmp <Sd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,0,(0),1,1,(0),(0),(0),0,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmaxnmp <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,0,(0),1,m,m,m,m,m,1,1,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmaxnm <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,0,(0),1,m,m,m,m,m,1,1,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmaxnmv <Fd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,0,(0),1,1,(0),(0),(0),0,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmaxp <Sd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,0,(0),1,1,(0),(0),(0),0,1,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmaxp <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,0,(0),1,m,m,m,m,m,1,1,1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmax <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,0,(0),1,m,m,m,m,m,1,1,1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmaxv <Fd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,0,(0),1,1,(0),(0),(0),0,1,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmin <Fd> <Fn> <Fm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fminnm <Fd> <Fn> <Fm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fminnmp <Sd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,1,(0),1,1,(0),(0),(0),0,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fminnmp <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,1,(0),1,m,m,m,m,m,1,1,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fminnm <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,1,(0),1,m,m,m,m,m,1,1,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fminnmv <Fd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,1,(0),1,1,(0),(0),(0),0,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fminp <Sd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,1,(0),1,1,(0),(0),(0),0,1,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fminp <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,1,(0),1,m,m,m,m,m,1,1,1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmin <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,1,(0),1,m,m,m,m,m,1,1,1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fminv <Fd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,1,(0),1,1,(0),(0),(0),0,1,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmla <Sd> <Sn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,0,0,(0),(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmla <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,0,0,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmla <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,0,(0),1,m,m,m,m,m,1,1,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmls <Sd> <Sn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,1,0,(0),(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmls <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,1,0,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmls <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,1,(0),1,m,m,m,m,m,1,1,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmov <Fd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),0,0,0,0,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmov <Fd> <FPIMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),1,1,1,1,0,(0),(0),1,i,i,i,i,i,i,i,i,1,0,0,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmov <Fd> <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),0,1,1,1,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmov <Rd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),0,1,1,0,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmov <Rd> <VnD1>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),1,1,1,0,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmov <VdD1> <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),1,1,1,1,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmov <Vd> <SIMD_FPIMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,1,1,1,0,1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmov <Vd> <SIMD_FPIMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,1,1,1,0,1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmsub <Fd> <Fn> <Fm> <Fa>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,1,1,1,1,1,(0),(0),0,m,m,m,m,m,1,a,a,a,a,a,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmul <Fd> <Fn> <Fm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmul <Sd> <Sn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,0,0,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmul <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,0,0,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmul <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,1,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmulx <Sd> <Sn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,(0),(0),(0),(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmulx <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,1,(0),0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmulx <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,0,0,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fmulx <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,1,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fneg <Fd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),0,0,1,0,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fneg <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,(0),1,1,1,0,(0),(0),1,0,(0),(0),(0),0,1,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fnmadd <Fd> <Fn> <Fm> <Fa>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,1,1,1,1,1,(0),(0),1,m,m,m,m,m,0,a,a,a,a,a,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fnmsub <Fd> <Fn> <Fm> <Fa>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,1,1,1,1,1,(0),(0),1,m,m,m,m,m,1,a,a,a,a,a,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fnmul <Fd> <Fn> <Fm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frecpe <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,1,1,1,1,0,1,(0),1,(0),(0),(0),(0),1,1,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frecpe <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,1,(0),1,(0),(0),(0),(0),1,1,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frecps <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,0,(0),1,m,m,m,m,m,(0),1,1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frecps <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,0,(0),1,m,m,m,m,m,1,1,1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frecpx <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,1,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frinta <Fd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),1,1,0,0,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frinta <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,0,(0),1,(0),(0),(0),(0),1,1,0,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frinti <Fd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),1,1,(0),1,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frinti <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,(0),1,1,1,0,1,(0),1,(0),(0),(0),(0),1,1,0,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frintm <Fd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),1,0,1,0,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frintm <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,(0),1,1,1,0,0,(0),1,(0),(0),(0),(0),1,1,0,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frintn <Fd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),1,0,0,0,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frintn <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,0,(0),1,(0),(0),(0),(0),1,1,0,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frintp <Fd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),1,0,0,1,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frintp <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,1,(0),1,(0),(0),(0),(0),1,1,0,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frintx <Fd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),1,1,1,0,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frintx <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,(0),1,1,1,0,0,(0),1,(0),(0),(0),(0),1,1,0,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frintz <Fd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),1,0,1,1,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frintz <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,(0),1,1,1,0,1,(0),1,(0),(0),(0),(0),1,1,0,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frsqrte <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,1,(0),1,(0),(0),(0),(0),1,1,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frsqrte <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,1,(0),1,(0),(0),(0),(0),1,1,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frsqrts <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,1,(0),1,m,m,m,m,m,(0),1,1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'frsqrts <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,1,(0),1,m,m,m,m,m,1,1,1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fsqrt <Fd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),0,0,1,1,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fsqrt <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,1,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fsub <Fd> <Fn> <Fm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'fsub <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,1,(0),1,m,m,m,m,m,1,1,0,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'hint <UIMM7>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,(0),1,(0),(0),(0),0,0,(0),(0),(0),(0),(0),1,0,m,m,m,m,o,o,o,(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'hlt <EXCEPTION>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,1,0,(0),0,1,0,0,(0),(0),0,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,(0),(0),(0),0,0 ]

  - processor: ['ARMv8']
    format: 'hvc <EXCEPTION>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,1,0,(0),0,1,0,0,(0),(0),0,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,(0),(0),(0),1,0 ]

  - processor: ['ARMv8']
    format: 'ins <Ed> <En>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ins <Ed> <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'isb <BARRIER_ISB>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,(0),1,(0),(0),(0),0,0,(0),(0),(0),(0),(0),(0),1,(0),(0),(0),(0),1,1,0,(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'ld1 <LEt> <SIMD_ADDR_POST>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,1,1,1,0,(0),(0),(0),(0),(0),(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'ld1 <LEt> <SIMD_ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,1,0,1,0,(0),(0),(0),(0),(0),(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'ld2 <LEt> <SIMD_ADDR_POST>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,(0),1,1,1,(0),(0),(0),(0),(0),(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'ld2 <LEt> <SIMD_ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,1,0,1,1,(0),(0),(0),(0),(0),(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'ld3 <LEt> <SIMD_ADDR_POST>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,1,1,1,0,(0),(0),(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'ld3 <LEt> <SIMD_ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,1,0,1,0,(0),(0),(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'ld4 <LEt> <SIMD_ADDR_POST>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,(0),1,1,1,(0),(0),(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'ld4 <LEt> <SIMD_ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,1,0,1,1,(0),(0),(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'ld4 <LVt> <SIMD_ADDR_POST>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,0,1,1,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'ld4 <LVt> <SIMD_ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,0,0,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'ldarb <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,0,0,1,0,0,(0),1,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldarh <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,0,0,1,0,0,(0),1,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldar <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),0,0,1,0,0,(0),1,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldaxp <Rt> <Rt2> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,0,0,(0),0,1,1,(0),(0),(0),(0),(0),1,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldaxrb <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,0,0,1,0,0,(0),0,1,0,(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldaxrh <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,0,0,1,0,0,(0),0,1,0,(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldaxr <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),0,0,1,0,0,(0),0,1,0,(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldnp <Ft> <Ft2> <ADDR_SIMM7>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,0,I,0,1,i,i,i,i,i,i,i,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldnp <Rt> <Rt2> <ADDR_SIMM7>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,0,0,I,0,1,i,i,i,i,i,i,i,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldp <Ft> <Ft2> <ADDR_SIMM7>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,0,I,0,1,i,i,i,i,i,i,i,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldp <Ft> <Ft2> <ADDR_SIMM7>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,0,I,1,1,i,i,i,i,i,i,i,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldp <Rt> <Rt2> <ADDR_SIMM7>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,0,0,I,1,1,i,i,i,i,i,i,i,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldpsw <Rt> <Rt2> <ADDR_SIMM7>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,0,0,I,0,1,i,i,i,i,i,i,i,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldpsw <Rt> <Rt2> <ADDR_SIMM7>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,0,0,I,1,1,i,i,i,i,i,i,i,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrb <Rt> <ADDR_REGOFF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,1,1,1,0,0,0,0,1,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrb <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,1,1,1,0,0,0,0,1,(0),i,i,i,i,i,i,i,i,i,I,1,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrb <Rt> <ADDR_UIMM12>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,(0),1,1,0,0,1,0,1,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldr <Ft> <ADDR_PCREL19>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,1,1,1,0,0,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldr <Ft> <ADDR_REGOFF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,0,0,(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldr <Ft> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,0,0,(0),1,(0),i,i,i,i,i,i,i,i,i,I,1,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldr <Ft> <ADDR_UIMM12>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,0,1,(0),1,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrh <Rt> <ADDR_REGOFF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,1,1,1,0,0,0,0,1,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrh <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,1,1,1,0,0,0,0,1,(0),i,i,i,i,i,i,i,i,i,I,1,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrh <Rt> <ADDR_UIMM12>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,(0),1,1,0,0,1,0,1,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldr <Rt> <ADDR_PCREL19>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,(0),0,1,1,0,0,0,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldr <Rt> <ADDR_REGOFF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),1,1,1,0,0,0,0,1,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldr <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),1,1,1,0,0,0,0,1,(0),i,i,i,i,i,i,i,i,i,I,1,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldr <Rt> <ADDR_UIMM12>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),(0),1,1,0,0,1,0,1,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrsb <Rt> <ADDR_REGOFF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,1,1,1,0,0,0,1,(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrsb <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,1,1,1,0,0,0,1,(0),(0),i,i,i,i,i,i,i,i,i,I,1,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrsb <Rt> <ADDR_UIMM12>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,(0),1,1,0,0,1,1,(0),i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrsh <Rt> <ADDR_REGOFF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,1,1,1,0,0,0,1,(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrsh <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,1,1,0,0,0,1,(0),(0),i,i,i,i,i,i,i,i,i,I,1,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrsh <Rt> <ADDR_UIMM12>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,(0),1,1,0,0,1,1,(0),i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrsw <Rt> <ADDR_PCREL19>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,0,0,1,1,0,0,0,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrsw <Rt> <ADDR_REGOFF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,0,1,1,1,0,0,0,1,(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrsw <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,0,1,1,1,0,0,0,1,(0),(0),i,i,i,i,i,i,i,i,i,I,1,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldrsw <Rt> <ADDR_UIMM12>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,0,(0),1,1,0,0,1,1,(0),i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldtrb <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,1,1,1,0,0,0,0,1,0,i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldtrh <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,1,1,1,0,0,0,0,1,0,i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldtr <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),1,1,1,0,0,0,0,1,0,i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldtrsb <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,1,1,1,0,0,0,1,(0),0,i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldtrsh <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,1,1,0,0,0,1,(0),0,i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldtrsw <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,0,1,1,1,0,0,0,1,(0),0,i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldurb <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,1,1,1,0,0,0,0,1,(0),i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldur <Ft> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,0,0,(0),1,(0),i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldurh <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,1,1,1,0,0,0,0,1,(0),i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldur <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),1,1,1,0,0,0,0,1,(0),i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldursb <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,1,1,1,0,0,0,1,(0),(0),i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldursh <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,1,1,1,0,0,0,1,(0),(0),i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldursw <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,0,1,1,1,0,0,0,1,(0),(0),i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldxp <Rt> <Rt2> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,0,0,(0),0,1,1,(0),(0),(0),(0),(0),0,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldxrb <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,0,0,1,0,0,(0),0,1,0,(0),(0),(0),(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldxrh <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,0,0,1,0,0,(0),0,1,0,(0),(0),(0),(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'ldxr <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),0,0,1,0,0,(0),0,1,0,(0),(0),(0),(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'lslv <Rd> <Rn> <Rm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,0,1,1,0,m,m,m,m,m,(0),(0),1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'lsrv <Rd> <Rn> <Rm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,0,(0),1,0,m,m,m,m,m,(0),(0),1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'madd <Rd> <Rn> <Rm> <Ra>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,1,(0),0,0,m,m,m,m,m,0,a,a,a,a,a,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'mla <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,0,0,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'mla <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'mls <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,1,0,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'mls <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'movi <Sd> <SIMD_IMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,1,1,0,0,1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'movi <Vd> <SIMD_IMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,1,1,0,0,1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'movi <Vd> <SIMD_IMM_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,(0),(0),0,(0),1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'movi <Vd> <SIMD_IMM_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),0,0,1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'movi <Vd> <SIMD_IMM_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,1,0,(0),0,1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'movk <Rd> <HALF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,(0),0,0,1,0,1,(0),(0),i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'movn <Rd> <HALF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,(0),0,0,1,0,1,(0),(0),i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'movz <Rd> <HALF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,0,1,0,1,(0),(0),i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'mrs <Rt> <SYSREG>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,(0),1,(0),(0),1,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'msr <PSTATEFIELD> <UIMM4>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,(0),1,(0),(0),(0),0,0,(0),(0),(0),(0),(0),0,0,m,m,m,m,(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'msr <SYSREG> <Rt>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,(0),1,(0),(0),0,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'msub <Rd> <Rn> <Rm> <Ra>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,1,(0),(0),0,m,m,m,m,m,1,a,a,a,a,a,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'mul <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,0,0,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'mul <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'mvni <Vd> <SIMD_IMM_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,(0),(0),0,(0),1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'mvni <Vd> <SIMD_IMM_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),0,0,1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'mvni <Vd> <SIMD_IMM_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,1,0,(0),0,1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'neg <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),0,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'neg <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),0,1,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'not <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),0,1,(0),0,(0),(0),(0),0,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'orn <Rd> <Rn> <Rm_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,(0),1,0,1,0,(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'orn <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,1,1,1,m,m,m,m,m,0,0,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'orr <Rd> <Rn> <Rm_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,0,1,0,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'orr <Rd_SP> <Rn> <LIMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,(0),0,0,1,0,0,N,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'orr <Vd> <SIMD_IMM_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,(0),(0),1,(0),1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'orr <Vd> <SIMD_IMM_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),1,0,1,(0),(0),(0),(0),(0),d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'orr <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,1,0,1,m,m,m,m,m,0,0,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'pmull2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),(0),1,1,1,0,(0),0,1,m,m,m,m,m,1,1,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'pmull2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),(0),1,1,1,0,(0),1,1,m,m,m,m,m,1,1,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'pmull <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),(0),1,1,1,0,(0),0,1,m,m,m,m,m,1,1,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'pmull <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),(0),1,1,1,0,(0),1,1,m,m,m,m,m,1,1,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'pmul <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'prfm <PRFOP> <ADDR_PCREL19>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,1,0,1,1,0,0,0,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'prfm <PRFOP> <ADDR_REGOFF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,1,(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'prfm <PRFOP> <ADDR_UIMM12>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,1,(0),1,1,0,0,1,1,(0),i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'prfum <PRFOP> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,1,1,1,1,0,0,0,1,(0),(0),i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'raddhn2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'raddhn <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'rbit <Rd> <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,0,1,1,0,(0),(0),(0),(0),(0),(0),(0),0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'rbit <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),1,1,(0),0,(0),(0),(0),0,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ret <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,1,0,(0),1,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'rev16 <Rd> <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,0,(0),1,0,(0),(0),(0),(0),(0),(0),(0),0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'rev16 <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,0,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'rev32 <Rd> <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,1,(0),1,1,0,1,0,1,(0),0,(0),(0),(0),(0),(0),(0),(0),0,(0),1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'rev32 <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,0,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'rev64 <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,0,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'rev <Rd> <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,(0),1,1,0,1,0,1,(0),0,(0),(0),(0),(0),(0),(0),(0),0,(0),1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'rev <Rd> <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,0,1,0,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),0,(0),1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'rorv <Rd> <Rn> <Rm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,0,(0),(0),0,m,m,m,m,m,(0),(0),1,(0),1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'rshrn2 <Vd> <Vn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),(0),0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'rshrn <Vd> <Vn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),(0),0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'rsubhn2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,(0),1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'rsubhn <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,(0),1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sabal2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sabal <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'saba <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sabdl2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),1,1,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sabdl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),1,1,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sabd <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sadalp <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,(0),0,(0),(0),0,0,1,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'saddl2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'saddlp <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),0,0,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'saddl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'saddlv <Fd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,1,(0),(0),(0),0,0,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'saddw2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'saddw <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sbc <Rd> <Rn> <Rm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,0,1,0,0,0,0,m,m,m,m,m,(0),(0),(0),(0),0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sbcs <Rd> <Rn> <Rm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,1,1,0,1,0,0,0,0,m,m,m,m,m,(0),(0),(0),(0),0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sbfm <Rd> <Rn> <IMMR> <IMMS>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,(0),0,0,1,1,0,(0),i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'scvtf <Fd> <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),0,1,0,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'scvtf <Fd> <Rn> <FBITS>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),1,1,1,1,0,(0),(0),0,(0),(0),(0),1,0,S,S,S,S,S,S,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'scvtf <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,1,1,1,1,0,0,(0),1,(0),(0),(0),(0),1,1,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'scvtf <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),(0),0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'scvtf <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,0,(0),1,(0),(0),(0),(0),1,1,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sdiv <Rd> <Rn> <Rm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),1,1,0,1,0,(0),(0),0,m,m,m,m,m,(0),(0),0,(0),1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sha1c <Fd> <Fn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),0,0,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sha1h <Fd> <Fn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,0,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sha1m <Fd> <Fn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),0,1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sha1p <Fd> <Fn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),0,0,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sha1su0 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),(0),1,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sha1su1 <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,0,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sha256h2 <Fd> <Fn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),1,0,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sha256h <Fd> <Fn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),1,0,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sha256su0 <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sha256su1 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),1,1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'shadd <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'shll2 <Vd> <Vn> <SHLL_IMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'shll <Vd> <Vn> <SHLL_IMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'shl <Sd> <Sn> <IMM_VLSL>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,1,0,1,(0),1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'shsub <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sli <Sd> <Sn> <IMM_VLSL>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,1,0,1,(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smaddl <Rd> <Rn> <Rm> <Ra>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,1,0,(0),1,m,m,m,m,m,0,a,a,a,a,a,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smaxp <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smax <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smaxv <Fd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,(0),1,1,1,0,(0),(0),1,1,(0),(0),(0),0,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smc <EXCEPTION>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,1,0,(0),0,1,0,0,(0),(0),0,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,(0),(0),(0),1,1 ]

  - processor: ['ARMv8']
    format: 'sminp <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,1,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smin <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sminv <Fd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,(0),1,1,1,0,(0),(0),1,1,(0),(0),(0),1,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smlal2 <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,0,1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smlal2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smlal <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,0,1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smlal <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,(0),1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smlsl2 <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,1,1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smlsl2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smlsl <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,1,1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smlsl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,(0),1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smov <Rd> <En>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),1,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smsubl <Rd> <Rn> <Rm> <Ra>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,1,0,(0),1,m,m,m,m,m,1,a,a,a,a,a,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smulh <Rd> <Rn> <Rm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,1,0,1,0,m,m,m,m,m,0,(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smull2 <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,(0),1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smull2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smull <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,(0),1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'smull <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqabs <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqabs <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,(0),0,(0),(0),0,0,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqadd <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqadd <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmlal2 <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,0,1,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmlal2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmlal <Sd> <Sn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,0,1,(0),(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmlal <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),0,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmlal <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,0,1,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmlal <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmlsl2 <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,1,1,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmlsl2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,1,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmlsl <Sd> <Sn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,1,1,(0),(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmlsl <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),(0),1,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmlsl <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,1,1,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmlsl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,1,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmulh <Sd> <Sn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,(0),(0),0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmulh <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,1,(0),1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmulh <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,1,0,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmulh <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmull2 <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),0,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,(0),1,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmull2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,1,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmull <Sd> <Sn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,(0),1,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmull <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,(0),1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),1,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmull <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),0,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,(0),1,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqdmull <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,1,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqneg <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqneg <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,(0),0,(0),(0),0,0,1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqrdmulh <Sd> <Sn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,1,0,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqrdmulh <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,m,m,m,m,m,1,(0),1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqrdmulh <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),0,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,1,0,1,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqrdmulh <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqrshl <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,(0),0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqrshl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqrshrn2 <Vd> <Vn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqrshrn <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),0,(0),1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqrshrn <Vd> <Vn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqrshrun2 <Vd> <Vn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),(0),0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqrshrun <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),(0),0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqrshrun <Vd> <Vn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),(0),0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqshl <Sd> <Sn> <IMM_VLSL>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,1,1,1,(0),1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqshl <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),1,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqshlu <Sd> <Sn> <IMM_VLSL>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,1,1,0,(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqshl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqshrn <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),(0),1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqshrun <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqsub <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),(0),1,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqsub <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqxtn2 <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqxtn <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqxtn <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqxtun2 <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqxtun <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sqxtun <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'srhadd <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sri <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,1,0,0,(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'srshl <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),(0),0,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'srshl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'srshr <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,(0),1,0,(0),1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'srsra <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,0,1,1,(0),1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sshl <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),1,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sshl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sshr <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,(0),0,0,(0),1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ssra <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,0,0,1,(0),1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ssubl2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ssubl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ssubw2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ssubw <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'st1 <LEt> <SIMD_ADDR_POST>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,1,1,0,0,(0),(0),(0),(0),(0),(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'st1 <LEt> <SIMD_ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,1,0,0,0,(0),(0),(0),(0),(0),(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'st2 <LEt> <SIMD_ADDR_POST>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,(0),1,0,1,(0),(0),(0),(0),(0),(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'st2 <LEt> <SIMD_ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,1,0,0,1,(0),(0),(0),(0),(0),(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'st3 <LEt> <SIMD_ADDR_POST>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,1,1,0,0,(0),(0),(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'st3 <LEt> <SIMD_ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,1,0,0,0,(0),(0),(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'st4 <LEt> <SIMD_ADDR_POST>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,(0),1,0,1,(0),(0),(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'st4 <LEt> <SIMD_ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,1,0,0,1,(0),(0),(0),(0),(0),(0),(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'st4 <LVt> <SIMD_ADDR_POST>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,0,1,0,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'st4 <LVt> <SIMD_ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,0,0,0,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0) ]

  - processor: ['ARMv8']
    format: 'stlrb <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,0,0,1,0,0,(0),1,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stlrh <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,0,0,1,0,0,(0),1,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stlr <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),0,0,1,0,0,(0),1,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stlxp <Rs> <Rt> <Rt2> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,0,0,(0),0,0,1,s,s,s,s,s,1,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stlxrb <Rs> <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,0,0,1,0,0,(0),0,0,0,s,s,s,s,s,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stlxrh <Rs> <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,0,0,1,0,0,(0),0,0,0,s,s,s,s,s,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stlxr <Rs> <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),0,0,1,0,0,(0),0,0,0,s,s,s,s,s,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stnp <Ft> <Ft2> <ADDR_SIMM7>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,0,I,0,0,i,i,i,i,i,i,i,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stnp <Rt> <Rt2> <ADDR_SIMM7>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,0,0,I,0,0,i,i,i,i,i,i,i,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stp <Ft> <Ft2> <ADDR_SIMM7>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,0,I,0,0,i,i,i,i,i,i,i,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stp <Ft> <Ft2> <ADDR_SIMM7>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,0,I,1,0,i,i,i,i,i,i,i,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stp <Rt> <Rt2> <ADDR_SIMM7>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,0,0,I,1,0,i,i,i,i,i,i,i,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'strb <Rt> <ADDR_REGOFF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,1,1,1,0,0,0,0,0,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'strb <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,1,1,1,0,0,0,0,0,(0),i,i,i,i,i,i,i,i,i,I,1,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'strb <Rt> <ADDR_UIMM12>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,(0),1,1,0,0,1,0,0,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'str <Ft> <ADDR_REGOFF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,0,0,(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'str <Ft> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,0,0,(0),0,(0),i,i,i,i,i,i,i,i,i,I,1,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'str <Ft> <ADDR_UIMM12>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,0,1,(0),0,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'strh <Rt> <ADDR_REGOFF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,1,1,1,0,0,0,0,0,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'strh <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,1,1,1,0,0,0,0,0,(0),i,i,i,i,i,i,i,i,i,I,1,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'strh <Rt> <ADDR_UIMM12>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,(0),1,1,0,0,1,0,0,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'str <Rt> <ADDR_REGOFF>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),1,1,1,0,0,0,0,0,1,(0),(0),(0),(0),(0),(0),(0),(0),(0),1,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'str <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),1,1,1,0,0,0,0,0,(0),i,i,i,i,i,i,i,i,i,I,1,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'str <Rt> <ADDR_UIMM12>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),(0),1,1,0,0,1,0,0,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'sttrb <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,1,1,1,0,0,0,0,0,0,i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'sttrh <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,1,1,1,0,0,0,0,0,0,i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'sttr <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),1,1,1,0,0,0,0,0,0,i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'sturb <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,1,1,1,0,0,0,0,0,(0),i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stur <Ft> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,0,0,(0),0,(0),i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'sturh <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,1,1,1,0,0,0,0,0,(0),i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stur <Rt> <ADDR_SIMM9>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),1,1,1,0,0,0,0,0,(0),i,i,i,i,i,i,i,i,i,I,0,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stxp <Rs> <Rt> <Rt2> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,0,0,(0),0,0,1,s,s,s,s,s,0,t,t,t,t,t,(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stxrb <Rs> <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,0,0,0,1,0,0,(0),0,0,0,s,s,s,s,s,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stxrh <Rs> <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 0,1,0,0,1,0,0,(0),0,0,0,s,s,s,s,s,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'stxr <Rs> <Rt> <ADDR_SIMPLE>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,(0),0,0,1,0,0,(0),0,0,0,s,s,s,s,s,0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'subhn2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'subhn <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,(0),1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sub <Rd> <Rn> <Rm_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,0,1,1,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sub <Rd_SP> <Rn_SP> <AIMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,0,0,1,S,S,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sub <Rd_SP> <Rn_SP> <Rm_EXT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,0,1,1,0,(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sub <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),0,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'subs <Rd> <Rn> <Rm_SFT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,0,1,1,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'subs <Rd> <Rn_SP> <AIMM>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,(0),0,0,0,1,S,S,i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'subs <Rd> <Rn_SP> <Rm_EXT>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,0,1,1,0,(0),1,(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'sub <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'suqadd <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'suqadd <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),1,0,(0),(0),(0),0,0,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'svc <EXCEPTION>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ 1,1,0,(0),0,1,0,0,(0),(0),0,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,(0),(0),(0),0,1 ]

  - processor: ['ARMv8']
    format: 'sysl <Rt> <UIMM3_OP1> <Cn> <Cm> <UIMM3_OP2>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,(0),1,(0),(0),1,0,1,o,o,o,n,n,n,n,m,m,m,m,o,o,o,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'sys <UIMM3_OP1> <Cn> <Cm> <UIMM3_OP2> <Rt>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,1,(0),1,(0),(0),0,0,1,o,o,o,n,n,n,n,m,m,m,m,o,o,o,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'tbl <Vd> <LVn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),(0),(0),0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'tbnz <Rt> <BIT_NUM> <ADDR_PCREL14>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ b,(0),1,(0),0,1,1,1,b,b,b,b,b,i,i,i,i,i,i,i,i,i,i,i,i,i,i,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'tbx <Vd> <LVn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),(0),(0),1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'tbz <Rt> <BIT_NUM> <ADDR_PCREL14>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ b,(0),1,(0),0,1,1,0,b,b,b,b,b,i,i,i,i,i,i,i,i,i,i,i,i,i,i,t,t,t,t,t ]

  - processor: ['ARMv8']
    format: 'trn1 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),0,(0),0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'trn2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),1,(0),0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uabal2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uabal <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uaba <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uabdl2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),1,1,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uabdl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),1,1,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uabd <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uadalp <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,(0),0,(0),(0),0,0,1,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uaddl2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uaddlp <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),0,0,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uaddl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uaddlv <Fd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,1,(0),(0),(0),0,0,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uaddw2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uaddw <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ubfm <Rd> <Rn> <IMMR> <IMMS>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,(0),0,0,1,1,0,(0),i,i,i,i,i,i,i,i,i,i,i,i,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ucvtf <Fd> <Rn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,1,1,0,(0),(0),1,(0),(0),0,1,1,0,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ucvtf <Fd> <Rn> <FBITS>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),1,1,1,1,0,(0),(0),0,(0),(0),(0),1,1,S,S,S,S,S,S,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ucvtf <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,0,(0),1,(0),(0),(0),(0),1,1,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ucvtf <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ucvtf <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,0,(0),1,(0),(0),(0),(0),1,1,1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'udiv <Rd> <Rn> <Rm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,(0),1,1,0,1,0,1,(0),0,m,m,m,m,m,(0),(0),0,(0),1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uhadd <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uhsub <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umaddl <Rd> <Rn> <Rm> <Ra>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),(0),1,0,1,1,1,(0),1,m,m,m,m,m,0,a,a,a,a,a,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umaxp <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umax <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umaxv <Fd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,(0),1,1,1,0,(0),(0),1,1,(0),(0),(0),0,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uminp <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,1,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umin <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,1,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uminv <Fd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,(0),1,1,1,0,(0),(0),1,1,(0),(0),(0),1,1,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umlal2 <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,0,1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umlal2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,(0),1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umlal <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,0,1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umlal <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,(0),1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umlsl2 <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,1,1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umlsl2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,(0),1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umlsl <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,0,1,1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umlsl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,(0),1,1,1,0,(0),(0),1,m,m,m,m,m,1,0,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umov <Rd> <En>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),0,(0),(0),(0),(0),(0),(0),(0),1,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umsubl <Rd> <Rn> <Rm> <Ra>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),(0),1,0,1,1,1,(0),1,m,m,m,m,m,1,a,a,a,a,a,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umulh <Rd> <Rn> <Rm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),(0),1,1,0,1,1,1,1,0,m,m,m,m,m,0,(0),(0),(0),(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umull2 <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,(0),1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umull2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umull <Vd> <Vn> <Em>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,1,(0),(0),(0),m,m,m,m,m,1,(0),1,0,(0),0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'umull <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,1,1,0,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqadd <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqadd <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqrshl <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),(0),0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqrshl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqrshrn2 <Vd> <Vn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqrshrn <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqrshrn <Vd> <Vn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),0,1,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqshl <Sd> <Sn> <IMM_VLSL>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,1,1,1,(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqshl <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),1,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqshl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqshrn <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),1,(0),(0),1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqsub <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),0,1,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqsub <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,0,1,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqxtn2 <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqxtn <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uqxtn <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'urecpe <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,(0),1,1,1,0,1,(0),1,(0),(0),(0),(0),1,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'urhadd <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,0,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'urshl <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,m,m,m,m,m,0,(0),0,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'urshl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,1,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'urshr <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,0,1,0,(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ursqrte <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,(0),1,1,1,0,1,(0),1,(0),(0),(0),(0),1,1,1,0,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ursra <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,0,1,1,(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ushl <Sd> <Sn> <Sm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,m,m,m,m,m,(0),1,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ushl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,1,0,0,0,1,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'ushr <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,0,0,0,(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'usqadd <Sd> <Sn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,0,(0),(0),1,(0),(0),(0),(0),(0),0,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'usqadd <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,0,1,1,1,0,(0),(0),1,0,(0),(0),(0),0,0,0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'usra <Sd> <Sn> <IMM_VLSR>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),1,1,1,1,1,1,(0),(0),(0),(0),(0),(0),(0),(0),0,0,0,1,(0),(0),n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'usubl2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'usubl <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,0,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'usubw2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'usubw <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,1,0,1,1,1,0,(0),(0),1,m,m,m,m,m,0,0,1,1,0,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uzp1 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),0,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'uzp2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),1,0,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'xtn2 <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),1,0,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'xtn <Vd> <Vn>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),0,0,0,1,1,1,0,(0),(0),1,(0),(0),(0),(0),1,0,0,1,0,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'zip1 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),0,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

  - processor: ['ARMv8']
    format: 'zip2 <Vd> <Vn> <Vm>'
    semantic: []
    mode: X1 # TODO: Find the correct mode
    attribute: []
    encoding: [ (0),(0),0,0,1,1,1,0,(0),(0),0,m,m,m,m,m,(0),1,1,1,1,0,n,n,n,n,n,d,d,d,d,d ]

operand:
  c: [ cond() ]
  Ra: [ reg('a') ]
  Rd: [ reg('d') ]
  Rm: [ reg('m') ]
  Rn: [ reg('n') ]
  Rs: [ reg('s') ]
  Rt: [ reg('t') ]
  Rdn: [ reg('dn') ]
  Rdm: [ reg('dm') ]
  PC: [ id(pc) ]
  SP: [ id(sp) ]
  imm: [ imm('i') ]
  const: [ imm('i') ]
  label: [ id(pc) + imm('i') ]
  registers: [ reg_list('r') ]
  shift: [ call('Decode_Shift') ]

  '[PC,#-0]': [ mem(id(pc)) ]
  '[<Rn>,#+/-<imm12>]': [ mem(reg('n') + imm('i')) ]
  '[<Rn>{,#+/-<imm>}]': [ mem(reg('n') + imm('i')) ]

# TODO: ARMExpandImm{,_C} (A5-10), ThumbExpandImm{,_C} (A6-18)
# TODO: [PC±{imm8}]

#End of ARMv8
